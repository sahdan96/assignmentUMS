#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 05, 2018 09:57:07 PM CST  platform: Windows NT

import sys
from tkinter import messagebox
from winsound import*
from math import*
import Vector2 as Vec
import basicCalt as Cal
import matrix2 as mat2
import matrix3by3 as mat3
import matrix4by4 as mat4
import about as ab
import main_menu as mm
import CompositeTransform as ct
import Vector3d as Vec3
import rotation_3d as r3d

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    root.resizable(width=False, height=False)
    PlaySound(None, SND_PURGE)
    root.protocol("WM_DELETE_WINDOW", top.when_closing)
    root.iconbitmap("icon.ico")
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {Segoe UI} -size 12 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font11 = "-family {Segoe UI} -size 10 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font12 = "-family {Segoe UI} -size 10 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font13 = "-family {Segoe UI} -size 12 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font14 = "-family {Segoe UI} -size 30 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font15 = "-family {Courier New} -size 12 -weight normal -slant"  \
            " roman -underline 0 -overstrike 0"
        font16 = "-family {Segoe UI} -size 15 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font17 = "-family {Segoe UI} -size 13 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font9 = "-family {Segoe UI} -size 13 -weight bold -slant roman"  \
            " -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1090x580+300+100")
        top.title("My Vector and Matrix Calculator")
        top.configure(background="azure")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = Menu(top, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menubar)

        self.mode = Menu(top, tearoff=0)
        self.menubar.add_cascade(menu=self.mode,
                                 activebackground="#d9d9d9",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 font="TkMenuFont",
                                 foreground="#000000",
                                 label="Mode")
        self.mode.add_command(command=lambda: self.openBasicCal(),
                              activebackground="#d9d9d9",
                              activeforeground="#000000",
                              background="#d9d9d9",
                              font="TkMenuFont",
                              foreground="#000000",
                              label="Standard Calculator")

        self.allMatMenu = Menu(top, tearoff=0)
        self.mode.add_cascade(menu=self.allMatMenu,
                              activebackground="#d9d9d9",
                              activeforeground="#000000",
                              background="#d9d9d9",
                              font="TkMenuFont",
                              foreground="#000000",
                              label="Matrix Calculator")

        self.allMatMenu.add_command(command = lambda : self.to_2by2(),
            activebackground="#d9d9d9",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkMenuFont",
            foreground="#000000",
            label="Matrix 2x2")

        self.allMatMenu.add_command(command=lambda: self.to_3by3(),
                                    activebackground="#d9d9d9",
                                    activeforeground="#000000",
                                    background="#d9d9d9",
                                    font="TkMenuFont",
                                    foreground="#000000",
                                    label="Matrix 3x3")

        self.allMatMenu.add_command(command=lambda: self.to_4by4(),
                                    activebackground="#d9d9d9",
                                    activeforeground="#000000",
                                    background="#d9d9d9",
                                    font="TkMenuFont",
                                    foreground="#000000",
                                    label="Matrix 4x4")

        self.allMatMenu.add_command(command=lambda: self.to_r3d(),
            activebackground="#d9d9d9",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkMenuFont",
            foreground="#000000",
            label="3D rotation")

        self.vector_menu = Menu(top, tearoff=0)
        self.mode.add_cascade(menu=self.vector_menu,
                              activebackground="#d9d9d9",
                              activeforeground="#000000",
                              background="#d9d9d9",
                              font="TkMenuFont",
                              foreground="#000000",
                              label="Vector Calculator")

        self.vector_menu.add_command(command=lambda: self.openVector(),
                                     activebackground="#d9d9d9",
                                     activeforeground="#000000",
                                     background="#d9d9d9",
                                     font="TkMenuFont",
                                     foreground="#000000",
                                     label="2D vector")

        self.vector_menu.add_command(command=lambda: self.openVector3d(),
                                     activebackground="#d9d9d9",
                                     activeforeground="#000000",
                                     background="#d9d9d9",
                                     font="TkMenuFont",
                                     foreground="#000000",
                                     label="3D vector")

        self.trans_menu = Menu(top, tearoff=0)
        self.mode.add_cascade(menu=self.trans_menu,
                              activebackground="#d9d9d9",
                              activeforeground="#000000",
                              background="#d9d9d9",
                              font="TkMenuFont",
                              foreground="#000000",
                              label="Transformation")

        self.trans_menu.add_command(
                                    activebackground="#d9d9d9",
                                    activeforeground="#000000",
                                    background="#d9d9d9",
                                    font="TkMenuFont",
                                    foreground="#000000",
                                    label="series transformation")

        self.trans_menu.add_command(command=lambda: self.to_ct(),
                                    activebackground="#d9d9d9",
                                    activeforeground="#000000",
                                    background="#d9d9d9",
                                    font="TkMenuFont",
                                    foreground="#000000",
                                    label="composite transformation")

        self.menubar.add_command(command=lambda: self.openAbout(),
                                 activebackground="#d8d8d8",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 font=font9,
                                 foreground="#000000",
                                 label="About")

        self.b2menu = Menu(top, tearoff=0)
        self.menubar.add_cascade(menu=self.b2menu,
                                 activebackground="#d9d9d9",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 font="TkMenuFont",
                                 foreground="#000000",
                                 label="Navigate")

        self.b2menu.add_command(command=lambda: self.btoMain(),
                                activebackground="#d9d9d9",
                                activeforeground="#000000",
                                background="#d9d9d9",
                                font="TkMenuFont",
                                foreground="#000000",
                                label="back to main menu")


        self.LabelframeAll = LabelFrame(top)
        self.LabelframeAll.place(relx=0.009, rely=0.017, relheight=0.966
                , relwidth=0.982)
        self.LabelframeAll.configure(relief=GROOVE)
        self.LabelframeAll.configure(borderwidth="5")
        self.LabelframeAll.configure(foreground="black")
        self.LabelframeAll.configure(background="green4")
        self.LabelframeAll.configure(highlightbackground="#d9d9d9")
        self.LabelframeAll.configure(highlightcolor="black")
        self.LabelframeAll.configure(width=1070)

        self.LabelEnterblabla = Label(self.LabelframeAll)
        self.LabelEnterblabla.place(relx=0.019, rely=0.035, height=30, width=290
                , bordermode='ignore')
        self.LabelEnterblabla.configure(activebackground="#f9f9f9")
        self.LabelEnterblabla.configure(activeforeground="black")
        self.LabelEnterblabla.configure(background="green4")
        self.LabelEnterblabla.configure(disabledforeground="#a3a3a3")
        self.LabelEnterblabla.configure(font=font11)
        self.LabelEnterblabla.configure(foreground="#000000")
        self.LabelEnterblabla.configure(highlightbackground="#d9d9d9")
        self.LabelEnterblabla.configure(highlightcolor="black")
        self.LabelEnterblabla.configure(text='''Enter the number of points(max 4) :''')

        self.EntryNum = Entry(self.LabelframeAll)
        self.EntryNum.place(relx=0.299, rely=0.027, height=40, relwidth=0.056
                , bordermode='ignore')
        self.EntryNum.configure(background="white")
        self.EntryNum.configure(borderwidth="3")
        self.EntryNum.configure(disabledforeground="#a3a3a3")
        self.EntryNum.configure(font=("Courier New","12"))
        self.EntryNum.configure(foreground="#000000")
        self.EntryNum.configure(highlightbackground="#d9d9d9")
        self.EntryNum.configure(highlightcolor="black")
        self.EntryNum.configure(insertbackground="black")
        self.EntryNum.configure(justify=CENTER)
        self.EntryNum.configure(selectbackground="#c4c4c4")
        self.EntryNum.configure(selectforeground="black")

        self.ButtonGenerate = Button(self.LabelframeAll)
        self.ButtonGenerate.place(relx=0.093, rely=0.106, height=40, width=73
                , bordermode='ignore')
        self.ButtonGenerate.configure(activebackground="#d9d9d9")
        self.ButtonGenerate.configure(activeforeground="#000000")
        self.ButtonGenerate.configure(background="#d9d9d9")
        self.ButtonGenerate.configure(borderwidth="3")
        self.ButtonGenerate.configure(disabledforeground="#a3a3a3")
        self.ButtonGenerate.configure(foreground="#000000")
        self.ButtonGenerate.configure(highlightbackground="#d9d9d9")
        self.ButtonGenerate.configure(highlightcolor="black")
        self.ButtonGenerate.configure(pady="0")
        self.ButtonGenerate.configure(text='''generate''')
        self.ButtonGenerate.configure(command = lambda : self.point())

        self.ButtonReset = Button(self.LabelframeAll)
        self.ButtonReset.place(relx=0.103, rely=0.857, height=40, width=60
                           , bordermode='ignore')
        self.ButtonReset.configure(activebackground="#d9d9d9")
        self.ButtonReset.configure(activeforeground="#000000")
        self.ButtonReset.configure(background="#d9d9d9")
        self.ButtonReset.configure(disabledforeground="#a3a3a3")
        self.ButtonReset.configure(font=("Segoe UI", "14"))
        self.ButtonReset.configure(foreground="#000000")
        self.ButtonReset.configure(highlightbackground="#d9d9d9")
        self.ButtonReset.configure(highlightcolor="black")
        self.ButtonReset.configure(pady="0")
        self.ButtonReset.configure(text='''reset''')
        self.ButtonReset.configure(command = lambda : self.reset())

        self.LabelframeT = LabelFrame(self.LabelframeAll)
        self.LabelframeT.place(relx=0.28, rely=0.106, relheight=0.823
                               , relwidth=0.71, bordermode='ignore')
        self.LabelframeT.configure(relief=GROOVE)
        self.LabelframeT.configure(borderwidth="1")
        self.LabelframeT.configure(font=font9)
        self.LabelframeT.configure(foreground="black")
        self.LabelframeT.configure(labelanchor="n")
        self.LabelframeT.configure(text='''Transformation''')
        self.LabelframeT.configure(background="lawn green")
        self.LabelframeT.configure(highlightbackground="#d9d9d9")
        self.LabelframeT.configure(highlightcolor="black")
        self.LabelframeT.configure(width=760)

        self.LabelChoose = Label(self.LabelframeT)
        self.LabelChoose.place(relx=0.013, rely=0.065, height=40, width=210
                               , bordermode='ignore')
        self.LabelChoose.configure(activebackground="#f9f9f9")
        self.LabelChoose.configure(activeforeground="black")
        self.LabelChoose.configure(background="lawn green")
        self.LabelChoose.configure(disabledforeground="#a3a3a3")
        self.LabelChoose.configure(font=font10)
        self.LabelChoose.configure(foreground="#000000")
        self.LabelChoose.configure(highlightbackground="#d9d9d9")
        self.LabelChoose.configure(highlightcolor="black")
        self.LabelChoose.configure(text='''Type of transformation :''')

        self.Combobox = ttk.Combobox(self.LabelframeT)
        self.Combobox.place(relx=0.303, rely=0.075, relheight=0.071
                            , relwidth=0.272, bordermode='ignore')
        self.value_list = ["select", "Translation", "Rotation", "Reflection", "Scaling", "Shear", ]
        self.Combobox.configure(values=self.value_list)
        self.Combobox.configure(font=font12)
        READONLY = 'readonly'
        self.Combobox.configure(state=READONLY)
        self.Combobox.configure(takefocus="")
        self.Combobox.current(0)

        self.ButtonSelect = Button(self.LabelframeT)
        self.ButtonSelect.place(relx=0.592, rely=0.065, height=35, width=52
                                , bordermode='ignore')
        self.ButtonSelect.configure(activebackground="#d9d9d9")
        self.ButtonSelect.configure(activeforeground="#000000")
        self.ButtonSelect.configure(background="#d9d9d9")
        self.ButtonSelect.configure(borderwidth="3")
        self.ButtonSelect.configure(disabledforeground="#a3a3a3")
        self.ButtonSelect.configure(foreground="#000000")
        self.ButtonSelect.configure(highlightbackground="#d9d9d9")
        self.ButtonSelect.configure(highlightcolor="black")
        self.ButtonSelect.configure(pady="0")
        self.ButtonSelect.configure(text='''select''')
        self.ButtonSelect.configure(command = lambda : self.transType())

    def point(self):
        if self.EntryNum.get()=="4" :
            self.LabelA = Label(self.LabelframeAll)
            self.LabelA.place(relx=0.019, rely=0.195, height=70, width=40
                              , bordermode='ignore')
            self.LabelA.configure(activebackground="#f9f9f9")
            self.LabelA.configure(activeforeground="black")
            self.LabelA.configure(background="green4")
            self.LabelA.configure(disabledforeground="#a3a3a3")
            self.LabelA.configure(font=("Segoe UI","30"))
            self.LabelA.configure(foreground="#000000")
            self.LabelA.configure(highlightbackground="#d9d9d9")
            self.LabelA.configure(highlightcolor="black")
            self.LabelA.configure(text='''A''')

            self.LabelP1 = Label(self.LabelframeAll)
            self.LabelP1.place(relx=0.056, rely=0.186, height=70, width=15
                               , bordermode='ignore')
            self.LabelP1.configure(activebackground="#f9f9f9")
            self.LabelP1.configure(activeforeground="black")
            self.LabelP1.configure(background="green4")
            self.LabelP1.configure(disabledforeground="#a3a3a3")
            self.LabelP1.configure(font=("Segoe UI","30"))
            self.LabelP1.configure(foreground="#000000")
            self.LabelP1.configure(highlightbackground="#d9d9d9")
            self.LabelP1.configure(highlightcolor="black")
            self.LabelP1.configure(text='''(''')

            self.EntryA_x = Entry(self.LabelframeAll)
            self.EntryA_x.place(relx=0.075, rely=0.221, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryA_x.configure(background="white")
            self.EntryA_x.configure(disabledforeground="#a3a3a3")
            self.EntryA_x.configure(font=("Courier New","12"))
            self.EntryA_x.configure(foreground="#000000")
            self.EntryA_x.configure(highlightbackground="#d9d9d9")
            self.EntryA_x.configure(highlightcolor="black")
            self.EntryA_x.configure(insertbackground="black")
            self.EntryA_x.configure(justify=CENTER)
            self.EntryA_x.configure(selectbackground="#c4c4c4")
            self.EntryA_x.configure(selectforeground="black")

            self.LabelC1 = Label(self.LabelframeAll)
            self.LabelC1.place(relx=0.126, rely=0.186, height=80, width=15
                               , bordermode='ignore')
            self.LabelC1.configure(activebackground="#f9f9f9")
            self.LabelC1.configure(activeforeground="black")
            self.LabelC1.configure(background="green4")
            self.LabelC1.configure(disabledforeground="#a3a3a3")
            self.LabelC1.configure(font=("Segoe UI","30"))
            self.LabelC1.configure(foreground="#000000")
            self.LabelC1.configure(highlightbackground="#d9d9d9")
            self.LabelC1.configure(highlightcolor="black")
            self.LabelC1.configure(text=''',''')

            self.EntryA_y = Entry(self.LabelframeAll)
            self.EntryA_y.place(relx=0.14, rely=0.221, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryA_y.configure(background="white")
            self.EntryA_y.configure(disabledforeground="#a3a3a3")
            self.EntryA_y.configure(font=("Courier New","12"))
            self.EntryA_y.configure(foreground="#000000")
            self.EntryA_y.configure(highlightbackground="#d9d9d9")
            self.EntryA_y.configure(highlightcolor="black")
            self.EntryA_y.configure(insertbackground="black")
            self.EntryA_y.configure(justify=CENTER)
            self.EntryA_y.configure(selectbackground="#c4c4c4")
            self.EntryA_y.configure(selectforeground="black")

            self.LabelP2 = Label(self.LabelframeAll)
            self.LabelP2.place(relx=0.192, rely=0.186, height=70, width=15
                               , bordermode='ignore')
            self.LabelP2.configure(activebackground="#f9f9f9")
            self.LabelP2.configure(activeforeground="black")
            self.LabelP2.configure(background="green4")
            self.LabelP2.configure(disabledforeground="#a3a3a3")
            self.LabelP2.configure(font=("Segoe UI","30"))
            self.LabelP2.configure(foreground="#000000")
            self.LabelP2.configure(highlightbackground="#d9d9d9")
            self.LabelP2.configure(highlightcolor="black")
            self.LabelP2.configure(text=''')''')

            self.LabelB = Label(self.LabelframeAll)
            self.LabelB.place(relx=0.019, rely=0.336, height=70, width=40
                              , bordermode='ignore')
            self.LabelB.configure(activebackground="#f9f9f9")
            self.LabelB.configure(activeforeground="black")
            self.LabelB.configure(background="green4")
            self.LabelB.configure(disabledforeground="#a3a3a3")
            self.LabelB.configure(font=("Segoe UI","30"))
            self.LabelB.configure(foreground="#000000")
            self.LabelB.configure(highlightbackground="#d9d9d9")
            self.LabelB.configure(highlightcolor="black")
            self.LabelB.configure(text='''B''')

            self.LabelP3 = Label(self.LabelframeAll)
            self.LabelP3.place(relx=0.056, rely=0.327, height=70, width=15
                               , bordermode='ignore')
            self.LabelP3.configure(activebackground="#f9f9f9")
            self.LabelP3.configure(activeforeground="black")
            self.LabelP3.configure(background="green4")
            self.LabelP3.configure(disabledforeground="#a3a3a3")
            self.LabelP3.configure(font=("Segoe UI","30"))
            self.LabelP3.configure(foreground="#000000")
            self.LabelP3.configure(highlightbackground="#d9d9d9")
            self.LabelP3.configure(highlightcolor="black")
            self.LabelP3.configure(text='''(''')

            self.EntryB_x = Entry(self.LabelframeAll)
            self.EntryB_x.place(relx=0.075, rely=0.363, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryB_x.configure(background="white")
            self.EntryB_x.configure(disabledforeground="#a3a3a3")
            self.EntryB_x.configure(font=("Courier New","12"))
            self.EntryB_x.configure(foreground="#000000")
            self.EntryB_x.configure(highlightbackground="#d9d9d9")
            self.EntryB_x.configure(highlightcolor="black")
            self.EntryB_x.configure(insertbackground="black")
            self.EntryB_x.configure(justify=CENTER)
            self.EntryB_x.configure(selectbackground="#c4c4c4")
            self.EntryB_x.configure(selectforeground="black")

            self.LabelC2 = Label(self.LabelframeAll)
            self.LabelC2.place(relx=0.126, rely=0.327, height=80, width=15
                               , bordermode='ignore')
            self.LabelC2.configure(activebackground="#f9f9f9")
            self.LabelC2.configure(activeforeground="black")
            self.LabelC2.configure(background="green4")
            self.LabelC2.configure(disabledforeground="#a3a3a3")
            self.LabelC2.configure(font=("Segoe UI","30"))
            self.LabelC2.configure(foreground="#000000")
            self.LabelC2.configure(highlightbackground="#d9d9d9")
            self.LabelC2.configure(highlightcolor="black")
            self.LabelC2.configure(text=''',''')

            self.EntryB_y = Entry(self.LabelframeAll)
            self.EntryB_y.place(relx=0.14, rely=0.363, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryB_y.configure(background="white")
            self.EntryB_y.configure(disabledforeground="#a3a3a3")
            self.EntryB_y.configure(font=("Courier New","12"))
            self.EntryB_y.configure(foreground="#000000")
            self.EntryB_y.configure(highlightbackground="#d9d9d9")
            self.EntryB_y.configure(highlightcolor="black")
            self.EntryB_y.configure(insertbackground="black")
            self.EntryB_y.configure(justify=CENTER)
            self.EntryB_y.configure(selectbackground="#c4c4c4")
            self.EntryB_y.configure(selectforeground="black")

            self.LabelP4 = Label(self.LabelframeAll)
            self.LabelP4.place(relx=0.192, rely=0.327, height=70, width=15
                               , bordermode='ignore')
            self.LabelP4.configure(activebackground="#f9f9f9")
            self.LabelP4.configure(activeforeground="black")
            self.LabelP4.configure(background="green4")
            self.LabelP4.configure(disabledforeground="#a3a3a3")
            self.LabelP4.configure(font=("Segoe UI","30"))
            self.LabelP4.configure(foreground="#000000")
            self.LabelP4.configure(highlightbackground="#d9d9d9")
            self.LabelP4.configure(highlightcolor="black")
            self.LabelP4.configure(text=''')''')

            self.LabelC = Label(self.LabelframeAll)
            self.LabelC.place(relx=0.019, rely=0.478, height=70, width=40
                              , bordermode='ignore')
            self.LabelC.configure(activebackground="#f9f9f9")
            self.LabelC.configure(activeforeground="black")
            self.LabelC.configure(background="green4")
            self.LabelC.configure(disabledforeground="#a3a3a3")
            self.LabelC.configure(font=("Segoe UI","30"))
            self.LabelC.configure(foreground="#000000")
            self.LabelC.configure(highlightbackground="#d9d9d9")
            self.LabelC.configure(highlightcolor="black")
            self.LabelC.configure(text='''C''')

            self.LabelP5 = Label(self.LabelframeAll)
            self.LabelP5.place(relx=0.056, rely=0.469, height=70, width=15
                               , bordermode='ignore')
            self.LabelP5.configure(activebackground="#f9f9f9")
            self.LabelP5.configure(activeforeground="black")
            self.LabelP5.configure(background="green4")
            self.LabelP5.configure(disabledforeground="#a3a3a3")
            self.LabelP5.configure(font=("Segoe UI","30"))
            self.LabelP5.configure(foreground="#000000")
            self.LabelP5.configure(highlightbackground="#d9d9d9")
            self.LabelP5.configure(highlightcolor="black")
            self.LabelP5.configure(text='''(''')

            self.EntryC_x = Entry(self.LabelframeAll)
            self.EntryC_x.place(relx=0.075, rely=0.504, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryC_x.configure(background="white")
            self.EntryC_x.configure(disabledforeground="#a3a3a3")
            self.EntryC_x.configure(font=("Courier New","12"))
            self.EntryC_x.configure(foreground="#000000")
            self.EntryC_x.configure(highlightbackground="#d9d9d9")
            self.EntryC_x.configure(highlightcolor="black")
            self.EntryC_x.configure(insertbackground="black")
            self.EntryC_x.configure(justify=CENTER)
            self.EntryC_x.configure(selectbackground="#c4c4c4")
            self.EntryC_x.configure(selectforeground="black")

            self.LabelC3 = Label(self.LabelframeAll)
            self.LabelC3.place(relx=0.126, rely=0.469, height=80, width=15
                               , bordermode='ignore')
            self.LabelC3.configure(activebackground="#f9f9f9")
            self.LabelC3.configure(activeforeground="black")
            self.LabelC3.configure(background="green4")
            self.LabelC3.configure(disabledforeground="#a3a3a3")
            self.LabelC3.configure(font=("Segoe UI","30"))
            self.LabelC3.configure(foreground="#000000")
            self.LabelC3.configure(highlightbackground="#d9d9d9")
            self.LabelC3.configure(highlightcolor="black")
            self.LabelC3.configure(text=''',''')

            self.EntryC_y = Entry(self.LabelframeAll)
            self.EntryC_y.place(relx=0.14, rely=0.504, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryC_y.configure(background="white")
            self.EntryC_y.configure(disabledforeground="#a3a3a3")
            self.EntryC_y.configure(font=("Courier New","12"))
            self.EntryC_y.configure(foreground="#000000")
            self.EntryC_y.configure(highlightbackground="#d9d9d9")
            self.EntryC_y.configure(highlightcolor="black")
            self.EntryC_y.configure(insertbackground="black")
            self.EntryC_y.configure(justify=CENTER)
            self.EntryC_y.configure(selectbackground="#c4c4c4")
            self.EntryC_y.configure(selectforeground="black")

            self.LabelP6 = Label(self.LabelframeAll)
            self.LabelP6.place(relx=0.192, rely=0.469, height=70, width=15
                               , bordermode='ignore')
            self.LabelP6.configure(activebackground="#f9f9f9")
            self.LabelP6.configure(activeforeground="black")
            self.LabelP6.configure(background="green4")
            self.LabelP6.configure(disabledforeground="#a3a3a3")
            self.LabelP6.configure(font=("Segoe UI","30"))
            self.LabelP6.configure(foreground="#000000")
            self.LabelP6.configure(highlightbackground="#d9d9d9")
            self.LabelP6.configure(highlightcolor="black")
            self.LabelP6.configure(text=''')''')

            self.LabelD = Label(self.LabelframeAll)
            self.LabelD.place(relx=0.019, rely=0.619, height=70, width=40
                              , bordermode='ignore')
            self.LabelD.configure(activebackground="#f9f9f9")
            self.LabelD.configure(activeforeground="black")
            self.LabelD.configure(background="green4")
            self.LabelD.configure(disabledforeground="#a3a3a3")
            self.LabelD.configure(font=("Segoe UI","30"))
            self.LabelD.configure(foreground="#000000")
            self.LabelD.configure(highlightbackground="#d9d9d9")
            self.LabelD.configure(highlightcolor="black")
            self.LabelD.configure(text='''D''')

            self.LabelP7 = Label(self.LabelframeAll)
            self.LabelP7.place(relx=0.056, rely=0.611, height=70, width=15
                               , bordermode='ignore')
            self.LabelP7.configure(activebackground="#f9f9f9")
            self.LabelP7.configure(activeforeground="black")
            self.LabelP7.configure(background="green4")
            self.LabelP7.configure(disabledforeground="#a3a3a3")
            self.LabelP7.configure(font=("Segoe UI","30"))
            self.LabelP7.configure(foreground="#000000")
            self.LabelP7.configure(highlightbackground="#d9d9d9")
            self.LabelP7.configure(highlightcolor="black")
            self.LabelP7.configure(text='''(''')

            self.EntryD_x = Entry(self.LabelframeAll)
            self.EntryD_x.place(relx=0.075, rely=0.646, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryD_x.configure(background="white")
            self.EntryD_x.configure(disabledforeground="#a3a3a3")
            self.EntryD_x.configure(font=("Courier New","12"))
            self.EntryD_x.configure(foreground="#000000")
            self.EntryD_x.configure(highlightbackground="#d9d9d9")
            self.EntryD_x.configure(highlightcolor="black")
            self.EntryD_x.configure(insertbackground="black")
            self.EntryD_x.configure(justify=CENTER)
            self.EntryD_x.configure(selectbackground="#c4c4c4")
            self.EntryD_x.configure(selectforeground="black")

            self.LabelC4 = Label(self.LabelframeAll)
            self.LabelC4.place(relx=0.126, rely=0.611, height=80, width=15
                               , bordermode='ignore')
            self.LabelC4.configure(activebackground="#f9f9f9")
            self.LabelC4.configure(activeforeground="black")
            self.LabelC4.configure(background="green4")
            self.LabelC4.configure(disabledforeground="#a3a3a3")
            self.LabelC4.configure(font=("Segoe UI","30"))
            self.LabelC4.configure(foreground="#000000")
            self.LabelC4.configure(highlightbackground="#d9d9d9")
            self.LabelC4.configure(highlightcolor="black")
            self.LabelC4.configure(text=''',''')

            self.EntryD_y = Entry(self.LabelframeAll)
            self.EntryD_y.place(relx=0.14, rely=0.646, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryD_y.configure(background="white")
            self.EntryD_y.configure(disabledforeground="#a3a3a3")
            self.EntryD_y.configure(font=("Courier New","12"))
            self.EntryD_y.configure(foreground="#000000")
            self.EntryD_y.configure(highlightbackground="#d9d9d9")
            self.EntryD_y.configure(highlightcolor="black")
            self.EntryD_y.configure(insertbackground="black")
            self.EntryD_y.configure(justify=CENTER)
            self.EntryD_y.configure(selectbackground="#c4c4c4")
            self.EntryD_y.configure(selectforeground="black")

            self.LabelP8 = Label(self.LabelframeAll)
            self.LabelP8.place(relx=0.192, rely=0.611, height=70, width=15
                               , bordermode='ignore')
            self.LabelP8.configure(activebackground="#f9f9f9")
            self.LabelP8.configure(activeforeground="black")
            self.LabelP8.configure(background="green4")
            self.LabelP8.configure(disabledforeground="#a3a3a3")
            self.LabelP8.configure(font=("Segoe UI","30"))
            self.LabelP8.configure(foreground="#000000")
            self.LabelP8.configure(highlightbackground="#d9d9d9")
            self.LabelP8.configure(highlightcolor="black")
            self.LabelP8.configure(text=''')''')

            #for 4 answer
            self.LabelAprime = Label(self.LabelframeT)
            self.LabelAprime.place(relx=0.697, rely=0.194, height=41, width=28
                              , bordermode='ignore')
            self.LabelAprime.configure(background="lawn green")
            self.LabelAprime.configure(disabledforeground="#a3a3a3")
            self.LabelAprime.configure(font=("Segoe UI","15"))
            self.LabelAprime.configure(foreground="#000000")
            self.LabelAprime.configure(text='''A\'''')

            self.LabelAans = Label(self.LabelframeT)
            self.LabelAans.place(relx=0.737, rely=0.194, height=40, width=150
                              , bordermode='ignore')
            self.LabelAans.configure(background="white")
            self.LabelAans.configure(disabledforeground="#a3a3a3")
            self.LabelAans.configure(font=("Segoe UI","13"))
            self.LabelAans.configure(foreground="#000000")
            self.LabelAans.configure(width=132)

            self.LabelBprime = Label(self.LabelframeT)
            self.LabelBprime.place(relx=0.697, rely=0.323, height=41, width=28
                                , bordermode='ignore')
            self.LabelBprime.configure(activebackground="#f9f9f9")
            self.LabelBprime.configure(activeforeground="black")
            self.LabelBprime.configure(background="lawn green")
            self.LabelBprime.configure(disabledforeground="#a3a3a3")
            self.LabelBprime.configure(font=("Segoe UI","15"))
            self.LabelBprime.configure(foreground="#000000")
            self.LabelBprime.configure(highlightbackground="#d9d9d9")
            self.LabelBprime.configure(highlightcolor="black")
            self.LabelBprime.configure(text='''B\'''')

            self.LabelBans = Label(self.LabelframeT)
            self.LabelBans.place(relx=0.737, rely=0.323, height=40, width=150
                                , bordermode='ignore')
            self.LabelBans.configure(activebackground="#f9f9f9")
            self.LabelBans.configure(activeforeground="black")
            self.LabelBans.configure(background="white")
            self.LabelBans.configure(disabledforeground="#a3a3a3")
            self.LabelBans.configure(font=("Segoe UI","13"))
            self.LabelBans.configure(foreground="#000000")
            self.LabelBans.configure(highlightbackground="#d9d9d9")
            self.LabelBans.configure(highlightcolor="black")

            self.LabelCprime = Label(self.LabelframeT)
            self.LabelCprime.place(relx=0.697, rely=0.452, height=41, width=28
                                , bordermode='ignore')
            self.LabelCprime.configure(activebackground="#f9f9f9")
            self.LabelCprime.configure(activeforeground="black")
            self.LabelCprime.configure(background="lawn green")
            self.LabelCprime.configure(disabledforeground="#a3a3a3")
            self.LabelCprime.configure(font=("Segoe UI","15"))
            self.LabelCprime.configure(foreground="#000000")
            self.LabelCprime.configure(highlightbackground="#d9d9d9")
            self.LabelCprime.configure(highlightcolor="black")
            self.LabelCprime.configure(text='''C\'''')

            self.LabelCans = Label(self.LabelframeT)
            self.LabelCans.place(relx=0.737, rely=0.452, height=40, width=150
                                , bordermode='ignore')
            self.LabelCans.configure(activebackground="#f9f9f9")
            self.LabelCans.configure(activeforeground="black")
            self.LabelCans.configure(background="white")
            self.LabelCans.configure(disabledforeground="#a3a3a3")
            self.LabelCans.configure(font=("Segoe UI","13"))
            self.LabelCans.configure(foreground="#000000")
            self.LabelCans.configure(highlightbackground="#d9d9d9")
            self.LabelCans.configure(highlightcolor="black")

            self.LabelDprime = Label(self.LabelframeT)
            self.LabelDprime.place(relx=0.697, rely=0.581, height=41, width=28
                                , bordermode='ignore')
            self.LabelDprime.configure(activebackground="#f9f9f9")
            self.LabelDprime.configure(activeforeground="black")
            self.LabelDprime.configure(background="lawn green")
            self.LabelDprime.configure(disabledforeground="#a3a3a3")
            self.LabelDprime.configure(font=("Segoe UI","15"))
            self.LabelDprime.configure(foreground="#000000")
            self.LabelDprime.configure(highlightbackground="#d9d9d9")
            self.LabelDprime.configure(highlightcolor="black")
            self.LabelDprime.configure(text='''D\'''')

            self.LabelDans = Label(self.LabelframeT)
            self.LabelDans.place(relx=0.737, rely=0.581, height=40, width=150
                                , bordermode='ignore')
            self.LabelDans.configure(activebackground="#f9f9f9")
            self.LabelDans.configure(activeforeground="black")
            self.LabelDans.configure(background="white")
            self.LabelDans.configure(disabledforeground="#a3a3a3")
            self.LabelDans.configure(font=("Segoe UI","13"))
            self.LabelDans.configure(foreground="#000000")
            self.LabelDans.configure(highlightbackground="#d9d9d9")
            self.LabelDans.configure(highlightcolor="black")

        elif self.EntryNum.get() =="3" :
            self.LabelA = Label(self.LabelframeAll)
            self.LabelA.place(relx=0.019, rely=0.195, height=70, width=40
                              , bordermode='ignore')
            self.LabelA.configure(activebackground="#f9f9f9")
            self.LabelA.configure(activeforeground="black")
            self.LabelA.configure(background="green4")
            self.LabelA.configure(disabledforeground="#a3a3a3")
            self.LabelA.configure(font=("Segoe UI","30"))
            self.LabelA.configure(foreground="#000000")
            self.LabelA.configure(highlightbackground="#d9d9d9")
            self.LabelA.configure(highlightcolor="black")
            self.LabelA.configure(text='''A''')

            self.LabelP1 = Label(self.LabelframeAll)
            self.LabelP1.place(relx=0.056, rely=0.186, height=70, width=15
                               , bordermode='ignore')
            self.LabelP1.configure(activebackground="#f9f9f9")
            self.LabelP1.configure(activeforeground="black")
            self.LabelP1.configure(background="green4")
            self.LabelP1.configure(disabledforeground="#a3a3a3")
            self.LabelP1.configure(font=("Segoe UI","30"))
            self.LabelP1.configure(foreground="#000000")
            self.LabelP1.configure(highlightbackground="#d9d9d9")
            self.LabelP1.configure(highlightcolor="black")
            self.LabelP1.configure(text='''(''')

            self.EntryA_x = Entry(self.LabelframeAll)
            self.EntryA_x.place(relx=0.075, rely=0.221, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryA_x.configure(background="white")
            self.EntryA_x.configure(disabledforeground="#a3a3a3")
            self.EntryA_x.configure(font=("Courier New","12"))
            self.EntryA_x.configure(foreground="#000000")
            self.EntryA_x.configure(highlightbackground="#d9d9d9")
            self.EntryA_x.configure(highlightcolor="black")
            self.EntryA_x.configure(insertbackground="black")
            self.EntryA_x.configure(justify=CENTER)
            self.EntryA_x.configure(selectbackground="#c4c4c4")
            self.EntryA_x.configure(selectforeground="black")

            self.LabelC1 = Label(self.LabelframeAll)
            self.LabelC1.place(relx=0.126, rely=0.186, height=80, width=15
                               , bordermode='ignore')
            self.LabelC1.configure(activebackground="#f9f9f9")
            self.LabelC1.configure(activeforeground="black")
            self.LabelC1.configure(background="green4")
            self.LabelC1.configure(disabledforeground="#a3a3a3")
            self.LabelC1.configure(font=("Segoe UI","30"))
            self.LabelC1.configure(foreground="#000000")
            self.LabelC1.configure(highlightbackground="#d9d9d9")
            self.LabelC1.configure(highlightcolor="black")
            self.LabelC1.configure(text=''',''')

            self.EntryA_y = Entry(self.LabelframeAll)
            self.EntryA_y.place(relx=0.14, rely=0.221, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryA_y.configure(background="white")
            self.EntryA_y.configure(disabledforeground="#a3a3a3")
            self.EntryA_y.configure(font=("Courier New","12"))
            self.EntryA_y.configure(foreground="#000000")
            self.EntryA_y.configure(highlightbackground="#d9d9d9")
            self.EntryA_y.configure(highlightcolor="black")
            self.EntryA_y.configure(insertbackground="black")
            self.EntryA_y.configure(justify=CENTER)
            self.EntryA_y.configure(selectbackground="#c4c4c4")
            self.EntryA_y.configure(selectforeground="black")

            self.LabelP2 = Label(self.LabelframeAll)
            self.LabelP2.place(relx=0.192, rely=0.186, height=70, width=15
                               , bordermode='ignore')
            self.LabelP2.configure(activebackground="#f9f9f9")
            self.LabelP2.configure(activeforeground="black")
            self.LabelP2.configure(background="green4")
            self.LabelP2.configure(disabledforeground="#a3a3a3")
            self.LabelP2.configure(font=("Segoe UI","30"))
            self.LabelP2.configure(foreground="#000000")
            self.LabelP2.configure(highlightbackground="#d9d9d9")
            self.LabelP2.configure(highlightcolor="black")
            self.LabelP2.configure(text=''')''')

            self.LabelB = Label(self.LabelframeAll)
            self.LabelB.place(relx=0.019, rely=0.336, height=70, width=40
                              , bordermode='ignore')
            self.LabelB.configure(activebackground="#f9f9f9")
            self.LabelB.configure(activeforeground="black")
            self.LabelB.configure(background="green4")
            self.LabelB.configure(disabledforeground="#a3a3a3")
            self.LabelB.configure(font=("Segoe UI","30"))
            self.LabelB.configure(foreground="#000000")
            self.LabelB.configure(highlightbackground="#d9d9d9")
            self.LabelB.configure(highlightcolor="black")
            self.LabelB.configure(text='''B''')

            self.LabelP3 = Label(self.LabelframeAll)
            self.LabelP3.place(relx=0.056, rely=0.327, height=70, width=15
                               , bordermode='ignore')
            self.LabelP3.configure(activebackground="#f9f9f9")
            self.LabelP3.configure(activeforeground="black")
            self.LabelP3.configure(background="green4")
            self.LabelP3.configure(disabledforeground="#a3a3a3")
            self.LabelP3.configure(font=("Segoe UI","30"))
            self.LabelP3.configure(foreground="#000000")
            self.LabelP3.configure(highlightbackground="#d9d9d9")
            self.LabelP3.configure(highlightcolor="black")
            self.LabelP3.configure(text='''(''')

            self.EntryB_x = Entry(self.LabelframeAll)
            self.EntryB_x.place(relx=0.075, rely=0.363, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryB_x.configure(background="white")
            self.EntryB_x.configure(disabledforeground="#a3a3a3")
            self.EntryB_x.configure(font=("Courier New","12"))
            self.EntryB_x.configure(foreground="#000000")
            self.EntryB_x.configure(highlightbackground="#d9d9d9")
            self.EntryB_x.configure(highlightcolor="black")
            self.EntryB_x.configure(insertbackground="black")
            self.EntryB_x.configure(justify=CENTER)
            self.EntryB_x.configure(selectbackground="#c4c4c4")
            self.EntryB_x.configure(selectforeground="black")

            self.LabelC2 = Label(self.LabelframeAll)
            self.LabelC2.place(relx=0.126, rely=0.327, height=80, width=15
                               , bordermode='ignore')
            self.LabelC2.configure(activebackground="#f9f9f9")
            self.LabelC2.configure(activeforeground="black")
            self.LabelC2.configure(background="green4")
            self.LabelC2.configure(disabledforeground="#a3a3a3")
            self.LabelC2.configure(font=("Segoe UI","30"))
            self.LabelC2.configure(foreground="#000000")
            self.LabelC2.configure(highlightbackground="#d9d9d9")
            self.LabelC2.configure(highlightcolor="black")
            self.LabelC2.configure(text=''',''')

            self.EntryB_y = Entry(self.LabelframeAll)
            self.EntryB_y.place(relx=0.14, rely=0.363, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryB_y.configure(background="white")
            self.EntryB_y.configure(disabledforeground="#a3a3a3")
            self.EntryB_y.configure(font=("Courier New","12"))
            self.EntryB_y.configure(foreground="#000000")
            self.EntryB_y.configure(highlightbackground="#d9d9d9")
            self.EntryB_y.configure(highlightcolor="black")
            self.EntryB_y.configure(insertbackground="black")
            self.EntryB_y.configure(justify=CENTER)
            self.EntryB_y.configure(selectbackground="#c4c4c4")
            self.EntryB_y.configure(selectforeground="black")

            self.LabelP4 = Label(self.LabelframeAll)
            self.LabelP4.place(relx=0.192, rely=0.327, height=70, width=15
                               , bordermode='ignore')
            self.LabelP4.configure(activebackground="#f9f9f9")
            self.LabelP4.configure(activeforeground="black")
            self.LabelP4.configure(background="green4")
            self.LabelP4.configure(disabledforeground="#a3a3a3")
            self.LabelP4.configure(font=("Segoe UI","30"))
            self.LabelP4.configure(foreground="#000000")
            self.LabelP4.configure(highlightbackground="#d9d9d9")
            self.LabelP4.configure(highlightcolor="black")
            self.LabelP4.configure(text=''')''')

            self.LabelC = Label(self.LabelframeAll)
            self.LabelC.place(relx=0.019, rely=0.478, height=70, width=40
                              , bordermode='ignore')
            self.LabelC.configure(activebackground="#f9f9f9")
            self.LabelC.configure(activeforeground="black")
            self.LabelC.configure(background="green4")
            self.LabelC.configure(disabledforeground="#a3a3a3")
            self.LabelC.configure(font=("Segoe UI","30"))
            self.LabelC.configure(foreground="#000000")
            self.LabelC.configure(highlightbackground="#d9d9d9")
            self.LabelC.configure(highlightcolor="black")
            self.LabelC.configure(text='''C''')

            self.LabelP5 = Label(self.LabelframeAll)
            self.LabelP5.place(relx=0.056, rely=0.469, height=70, width=15
                               , bordermode='ignore')
            self.LabelP5.configure(activebackground="#f9f9f9")
            self.LabelP5.configure(activeforeground="black")
            self.LabelP5.configure(background="green4")
            self.LabelP5.configure(disabledforeground="#a3a3a3")
            self.LabelP5.configure(font=("Segoe UI","30"))
            self.LabelP5.configure(foreground="#000000")
            self.LabelP5.configure(highlightbackground="#d9d9d9")
            self.LabelP5.configure(highlightcolor="black")
            self.LabelP5.configure(text='''(''')

            self.EntryC_x = Entry(self.LabelframeAll)
            self.EntryC_x.place(relx=0.075, rely=0.504, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryC_x.configure(background="white")
            self.EntryC_x.configure(disabledforeground="#a3a3a3")
            self.EntryC_x.configure(font=("Courier New","12"))
            self.EntryC_x.configure(foreground="#000000")
            self.EntryC_x.configure(highlightbackground="#d9d9d9")
            self.EntryC_x.configure(highlightcolor="black")
            self.EntryC_x.configure(insertbackground="black")
            self.EntryC_x.configure(justify=CENTER)
            self.EntryC_x.configure(selectbackground="#c4c4c4")
            self.EntryC_x.configure(selectforeground="black")

            self.LabelC3 = Label(self.LabelframeAll)
            self.LabelC3.place(relx=0.126, rely=0.469, height=80, width=15
                               , bordermode='ignore')
            self.LabelC3.configure(activebackground="#f9f9f9")
            self.LabelC3.configure(activeforeground="black")
            self.LabelC3.configure(background="green4")
            self.LabelC3.configure(disabledforeground="#a3a3a3")
            self.LabelC3.configure(font=("Segoe UI","30"))
            self.LabelC3.configure(foreground="#000000")
            self.LabelC3.configure(highlightbackground="#d9d9d9")
            self.LabelC3.configure(highlightcolor="black")
            self.LabelC3.configure(text=''',''')

            self.EntryC_y = Entry(self.LabelframeAll)
            self.EntryC_y.place(relx=0.14, rely=0.504, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryC_y.configure(background="white")
            self.EntryC_y.configure(disabledforeground="#a3a3a3")
            self.EntryC_y.configure(font=("Courier New","12"))
            self.EntryC_y.configure(foreground="#000000")
            self.EntryC_y.configure(highlightbackground="#d9d9d9")
            self.EntryC_y.configure(highlightcolor="black")
            self.EntryC_y.configure(insertbackground="black")
            self.EntryC_y.configure(justify=CENTER)
            self.EntryC_y.configure(selectbackground="#c4c4c4")
            self.EntryC_y.configure(selectforeground="black")

            self.LabelP6 = Label(self.LabelframeAll)
            self.LabelP6.place(relx=0.192, rely=0.469, height=70, width=15
                               , bordermode='ignore')
            self.LabelP6.configure(activebackground="#f9f9f9")
            self.LabelP6.configure(activeforeground="black")
            self.LabelP6.configure(background="green4")
            self.LabelP6.configure(disabledforeground="#a3a3a3")
            self.LabelP6.configure(font=("Segoe UI","30"))
            self.LabelP6.configure(foreground="#000000")
            self.LabelP6.configure(highlightbackground="#d9d9d9")
            self.LabelP6.configure(highlightcolor="black")
            self.LabelP6.configure(text=''')''')

            #for 3 answer
            self.LabelAprime = Label(self.LabelframeT)
            self.LabelAprime.place(relx=0.697, rely=0.194, height=41, width=28
                                   , bordermode='ignore')
            self.LabelAprime.configure(background="lawn green")
            self.LabelAprime.configure(disabledforeground="#a3a3a3")
            self.LabelAprime.configure(font=("Segoe UI","15"))
            self.LabelAprime.configure(foreground="#000000")
            self.LabelAprime.configure(text='''A\'''')

            self.LabelAans = Label(self.LabelframeT)
            self.LabelAans.place(relx=0.737, rely=0.194, height=40, width=150
                                 , bordermode='ignore')
            self.LabelAans.configure(background="white")
            self.LabelAans.configure(disabledforeground="#a3a3a3")
            self.LabelAans.configure(font=("Segoe UI","13"))
            self.LabelAans.configure(foreground="#000000")
            self.LabelAans.configure(width=132)

            self.LabelBprime = Label(self.LabelframeT)
            self.LabelBprime.place(relx=0.697, rely=0.323, height=41, width=28
                                   , bordermode='ignore')
            self.LabelBprime.configure(activebackground="#f9f9f9")
            self.LabelBprime.configure(activeforeground="black")
            self.LabelBprime.configure(background="lawn green")
            self.LabelBprime.configure(disabledforeground="#a3a3a3")
            self.LabelBprime.configure(font=("Segoe UI","15"))
            self.LabelBprime.configure(foreground="#000000")
            self.LabelBprime.configure(highlightbackground="#d9d9d9")
            self.LabelBprime.configure(highlightcolor="black")
            self.LabelBprime.configure(text='''B\'''')

            self.LabelBans = Label(self.LabelframeT)
            self.LabelBans.place(relx=0.737, rely=0.323, height=40, width=150
                                 , bordermode='ignore')
            self.LabelBans.configure(activebackground="#f9f9f9")
            self.LabelBans.configure(activeforeground="black")
            self.LabelBans.configure(background="white")
            self.LabelBans.configure(disabledforeground="#a3a3a3")
            self.LabelBans.configure(font=("Segoe UI","13"))
            self.LabelBans.configure(foreground="#000000")
            self.LabelBans.configure(highlightbackground="#d9d9d9")
            self.LabelBans.configure(highlightcolor="black")

            self.LabelCprime = Label(self.LabelframeT)
            self.LabelCprime.place(relx=0.697, rely=0.452, height=41, width=28
                                   , bordermode='ignore')
            self.LabelCprime.configure(activebackground="#f9f9f9")
            self.LabelCprime.configure(activeforeground="black")
            self.LabelCprime.configure(background="lawn green")
            self.LabelCprime.configure(disabledforeground="#a3a3a3")
            self.LabelCprime.configure(font=("Segoe UI","15"))
            self.LabelCprime.configure(foreground="#000000")
            self.LabelCprime.configure(highlightbackground="#d9d9d9")
            self.LabelCprime.configure(highlightcolor="black")
            self.LabelCprime.configure(text='''C\'''')

            self.LabelCans = Label(self.LabelframeT)
            self.LabelCans.place(relx=0.737, rely=0.452, height=40, width=150
                                 , bordermode='ignore')
            self.LabelCans.configure(activebackground="#f9f9f9")
            self.LabelCans.configure(activeforeground="black")
            self.LabelCans.configure(background="white")
            self.LabelCans.configure(disabledforeground="#a3a3a3")
            self.LabelCans.configure(font=("Segoe UI","13"))
            self.LabelCans.configure(foreground="#000000")
            self.LabelCans.configure(highlightbackground="#d9d9d9")
            self.LabelCans.configure(highlightcolor="black")

        elif self.EntryNum.get() =="2" :
            self.LabelA = Label(self.LabelframeAll)
            self.LabelA.place(relx=0.019, rely=0.195, height=70, width=40
                              , bordermode='ignore')
            self.LabelA.configure(activebackground="#f9f9f9")
            self.LabelA.configure(activeforeground="black")
            self.LabelA.configure(background="green4")
            self.LabelA.configure(disabledforeground="#a3a3a3")
            self.LabelA.configure(font=("Segoe UI","30"))
            self.LabelA.configure(foreground="#000000")
            self.LabelA.configure(highlightbackground="#d9d9d9")
            self.LabelA.configure(highlightcolor="black")
            self.LabelA.configure(text='''A''')

            self.LabelP1 = Label(self.LabelframeAll)
            self.LabelP1.place(relx=0.056, rely=0.186, height=70, width=15
                               , bordermode='ignore')
            self.LabelP1.configure(activebackground="#f9f9f9")
            self.LabelP1.configure(activeforeground="black")
            self.LabelP1.configure(background="green4")
            self.LabelP1.configure(disabledforeground="#a3a3a3")
            self.LabelP1.configure(font=("Segoe UI","30"))
            self.LabelP1.configure(foreground="#000000")
            self.LabelP1.configure(highlightbackground="#d9d9d9")
            self.LabelP1.configure(highlightcolor="black")
            self.LabelP1.configure(text='''(''')

            self.EntryA_x = Entry(self.LabelframeAll)
            self.EntryA_x.place(relx=0.075, rely=0.221, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryA_x.configure(background="white")
            self.EntryA_x.configure(disabledforeground="#a3a3a3")
            self.EntryA_x.configure(font=("Courier New","12"))
            self.EntryA_x.configure(foreground="#000000")
            self.EntryA_x.configure(highlightbackground="#d9d9d9")
            self.EntryA_x.configure(highlightcolor="black")
            self.EntryA_x.configure(insertbackground="black")
            self.EntryA_x.configure(justify=CENTER)
            self.EntryA_x.configure(selectbackground="#c4c4c4")
            self.EntryA_x.configure(selectforeground="black")

            self.LabelC1 = Label(self.LabelframeAll)
            self.LabelC1.place(relx=0.126, rely=0.186, height=80, width=15
                               , bordermode='ignore')
            self.LabelC1.configure(activebackground="#f9f9f9")
            self.LabelC1.configure(activeforeground="black")
            self.LabelC1.configure(background="green4")
            self.LabelC1.configure(disabledforeground="#a3a3a3")
            self.LabelC1.configure(font=("Segoe UI","30"))
            self.LabelC1.configure(foreground="#000000")
            self.LabelC1.configure(highlightbackground="#d9d9d9")
            self.LabelC1.configure(highlightcolor="black")
            self.LabelC1.configure(text=''',''')

            self.EntryA_y = Entry(self.LabelframeAll)
            self.EntryA_y.place(relx=0.14, rely=0.221, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryA_y.configure(background="white")
            self.EntryA_y.configure(disabledforeground="#a3a3a3")
            self.EntryA_y.configure(font=("Courier New","12"))
            self.EntryA_y.configure(foreground="#000000")
            self.EntryA_y.configure(highlightbackground="#d9d9d9")
            self.EntryA_y.configure(highlightcolor="black")
            self.EntryA_y.configure(insertbackground="black")
            self.EntryA_y.configure(justify=CENTER)
            self.EntryA_y.configure(selectbackground="#c4c4c4")
            self.EntryA_y.configure(selectforeground="black")

            self.LabelP2 = Label(self.LabelframeAll)
            self.LabelP2.place(relx=0.192, rely=0.186, height=70, width=15
                               , bordermode='ignore')
            self.LabelP2.configure(activebackground="#f9f9f9")
            self.LabelP2.configure(activeforeground="black")
            self.LabelP2.configure(background="green4")
            self.LabelP2.configure(disabledforeground="#a3a3a3")
            self.LabelP2.configure(font=("Segoe UI","30"))
            self.LabelP2.configure(foreground="#000000")
            self.LabelP2.configure(highlightbackground="#d9d9d9")
            self.LabelP2.configure(highlightcolor="black")
            self.LabelP2.configure(text=''')''')

            self.LabelB = Label(self.LabelframeAll)
            self.LabelB.place(relx=0.019, rely=0.336, height=70, width=40
                              , bordermode='ignore')
            self.LabelB.configure(activebackground="#f9f9f9")
            self.LabelB.configure(activeforeground="black")
            self.LabelB.configure(background="green4")
            self.LabelB.configure(disabledforeground="#a3a3a3")
            self.LabelB.configure(font=("Segoe UI","30"))
            self.LabelB.configure(foreground="#000000")
            self.LabelB.configure(highlightbackground="#d9d9d9")
            self.LabelB.configure(highlightcolor="black")
            self.LabelB.configure(text='''B''')

            self.LabelP3 = Label(self.LabelframeAll)
            self.LabelP3.place(relx=0.056, rely=0.327, height=70, width=15
                               , bordermode='ignore')
            self.LabelP3.configure(activebackground="#f9f9f9")
            self.LabelP3.configure(activeforeground="black")
            self.LabelP3.configure(background="green4")
            self.LabelP3.configure(disabledforeground="#a3a3a3")
            self.LabelP3.configure(font=("Segoe UI","30"))
            self.LabelP3.configure(foreground="#000000")
            self.LabelP3.configure(highlightbackground="#d9d9d9")
            self.LabelP3.configure(highlightcolor="black")
            self.LabelP3.configure(text='''(''')

            self.EntryB_x = Entry(self.LabelframeAll)
            self.EntryB_x.place(relx=0.075, rely=0.363, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryB_x.configure(background="white")
            self.EntryB_x.configure(disabledforeground="#a3a3a3")
            self.EntryB_x.configure(font=("Courier New","12"))
            self.EntryB_x.configure(foreground="#000000")
            self.EntryB_x.configure(highlightbackground="#d9d9d9")
            self.EntryB_x.configure(highlightcolor="black")
            self.EntryB_x.configure(insertbackground="black")
            self.EntryB_x.configure(justify=CENTER)
            self.EntryB_x.configure(selectbackground="#c4c4c4")
            self.EntryB_x.configure(selectforeground="black")

            self.LabelC2 = Label(self.LabelframeAll)
            self.LabelC2.place(relx=0.126, rely=0.327, height=80, width=15
                               , bordermode='ignore')
            self.LabelC2.configure(activebackground="#f9f9f9")
            self.LabelC2.configure(activeforeground="black")
            self.LabelC2.configure(background="green4")
            self.LabelC2.configure(disabledforeground="#a3a3a3")
            self.LabelC2.configure(font=("Segoe UI","30"))
            self.LabelC2.configure(foreground="#000000")
            self.LabelC2.configure(highlightbackground="#d9d9d9")
            self.LabelC2.configure(highlightcolor="black")
            self.LabelC2.configure(text=''',''')

            self.EntryB_y = Entry(self.LabelframeAll)
            self.EntryB_y.place(relx=0.14, rely=0.363, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryB_y.configure(background="white")
            self.EntryB_y.configure(disabledforeground="#a3a3a3")
            self.EntryB_y.configure(font=("Courier New","12"))
            self.EntryB_y.configure(foreground="#000000")
            self.EntryB_y.configure(highlightbackground="#d9d9d9")
            self.EntryB_y.configure(highlightcolor="black")
            self.EntryB_y.configure(insertbackground="black")
            self.EntryB_y.configure(justify=CENTER)
            self.EntryB_y.configure(selectbackground="#c4c4c4")
            self.EntryB_y.configure(selectforeground="black")

            self.LabelP4 = Label(self.LabelframeAll)
            self.LabelP4.place(relx=0.192, rely=0.327, height=70, width=15
                               , bordermode='ignore')
            self.LabelP4.configure(activebackground="#f9f9f9")
            self.LabelP4.configure(activeforeground="black")
            self.LabelP4.configure(background="green4")
            self.LabelP4.configure(disabledforeground="#a3a3a3")
            self.LabelP4.configure(font=("Segoe UI","30"))
            self.LabelP4.configure(foreground="#000000")
            self.LabelP4.configure(highlightbackground="#d9d9d9")
            self.LabelP4.configure(highlightcolor="black")
            self.LabelP4.configure(text=''')''')

            #for 2 answer
            self.LabelAprime = Label(self.LabelframeT)
            self.LabelAprime.place(relx=0.697, rely=0.194, height=41, width=28
                                   , bordermode='ignore')
            self.LabelAprime.configure(background="lawn green")
            self.LabelAprime.configure(disabledforeground="#a3a3a3")
            self.LabelAprime.configure(font=("Segoe UI","15"))
            self.LabelAprime.configure(foreground="#000000")
            self.LabelAprime.configure(text='''A\'''')

            self.LabelAans = Label(self.LabelframeT)
            self.LabelAans.place(relx=0.737, rely=0.194, height=40, width=150
                                 , bordermode='ignore')
            self.LabelAans.configure(background="white")
            self.LabelAans.configure(disabledforeground="#a3a3a3")
            self.LabelAans.configure(font=("Segoe UI","13"))
            self.LabelAans.configure(foreground="#000000")
            self.LabelAans.configure(width=132)

            self.LabelBprime = Label(self.LabelframeT)
            self.LabelBprime.place(relx=0.697, rely=0.323, height=41, width=28
                                   , bordermode='ignore')
            self.LabelBprime.configure(activebackground="#f9f9f9")
            self.LabelBprime.configure(activeforeground="black")
            self.LabelBprime.configure(background="lawn green")
            self.LabelBprime.configure(disabledforeground="#a3a3a3")
            self.LabelBprime.configure(font=("Segoe UI","15"))
            self.LabelBprime.configure(foreground="#000000")
            self.LabelBprime.configure(highlightbackground="#d9d9d9")
            self.LabelBprime.configure(highlightcolor="black")
            self.LabelBprime.configure(text='''B\'''')

            self.LabelBans = Label(self.LabelframeT)
            self.LabelBans.place(relx=0.737, rely=0.323, height=40, width=150
                                 , bordermode='ignore')
            self.LabelBans.configure(activebackground="#f9f9f9")
            self.LabelBans.configure(activeforeground="black")
            self.LabelBans.configure(background="white")
            self.LabelBans.configure(disabledforeground="#a3a3a3")
            self.LabelBans.configure(font=("Segoe UI","13"))
            self.LabelBans.configure(foreground="#000000")
            self.LabelBans.configure(highlightbackground="#d9d9d9")
            self.LabelBans.configure(highlightcolor="black")

        elif self.EntryNum.get() =="1" :
            self.LabelA = Label(self.LabelframeAll)
            self.LabelA.place(relx=0.019, rely=0.195, height=70, width=40
                              , bordermode='ignore')
            self.LabelA.configure(activebackground="#f9f9f9")
            self.LabelA.configure(activeforeground="black")
            self.LabelA.configure(background="green4")
            self.LabelA.configure(disabledforeground="#a3a3a3")
            self.LabelA.configure(font=("Segoe UI","30"))
            self.LabelA.configure(foreground="#000000")
            self.LabelA.configure(highlightbackground="#d9d9d9")
            self.LabelA.configure(highlightcolor="black")
            self.LabelA.configure(text='''A''')

            self.LabelP1 = Label(self.LabelframeAll)
            self.LabelP1.place(relx=0.056, rely=0.186, height=70, width=15
                               , bordermode='ignore')
            self.LabelP1.configure(activebackground="#f9f9f9")
            self.LabelP1.configure(activeforeground="black")
            self.LabelP1.configure(background="green4")
            self.LabelP1.configure(disabledforeground="#a3a3a3")
            self.LabelP1.configure(font=("Segoe UI","30"))
            self.LabelP1.configure(foreground="#000000")
            self.LabelP1.configure(highlightbackground="#d9d9d9")
            self.LabelP1.configure(highlightcolor="black")
            self.LabelP1.configure(text='''(''')

            self.EntryA_x = Entry(self.LabelframeAll)
            self.EntryA_x.place(relx=0.075, rely=0.221, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryA_x.configure(background="white")
            self.EntryA_x.configure(disabledforeground="#a3a3a3")
            self.EntryA_x.configure(font=("Courier New","12"))
            self.EntryA_x.configure(foreground="#000000")
            self.EntryA_x.configure(highlightbackground="#d9d9d9")
            self.EntryA_x.configure(highlightcolor="black")
            self.EntryA_x.configure(insertbackground="black")
            self.EntryA_x.configure(justify=CENTER)
            self.EntryA_x.configure(selectbackground="#c4c4c4")
            self.EntryA_x.configure(selectforeground="black")

            self.LabelC1 = Label(self.LabelframeAll)
            self.LabelC1.place(relx=0.126, rely=0.186, height=80, width=15
                               , bordermode='ignore')
            self.LabelC1.configure(activebackground="#f9f9f9")
            self.LabelC1.configure(activeforeground="black")
            self.LabelC1.configure(background="green4")
            self.LabelC1.configure(disabledforeground="#a3a3a3")
            self.LabelC1.configure(font=("Segoe UI","30"))
            self.LabelC1.configure(foreground="#000000")
            self.LabelC1.configure(highlightbackground="#d9d9d9")
            self.LabelC1.configure(highlightcolor="black")
            self.LabelC1.configure(text=''',''')

            self.EntryA_y = Entry(self.LabelframeAll)
            self.EntryA_y.place(relx=0.14, rely=0.221, height=40, relwidth=0.047
                                , bordermode='ignore')
            self.EntryA_y.configure(background="white")
            self.EntryA_y.configure(disabledforeground="#a3a3a3")
            self.EntryA_y.configure(font=("Courier New","12"))
            self.EntryA_y.configure(foreground="#000000")
            self.EntryA_y.configure(highlightbackground="#d9d9d9")
            self.EntryA_y.configure(highlightcolor="black")
            self.EntryA_y.configure(insertbackground="black")
            self.EntryA_y.configure(justify=CENTER)
            self.EntryA_y.configure(selectbackground="#c4c4c4")
            self.EntryA_y.configure(selectforeground="black")

            self.LabelP2 = Label(self.LabelframeAll)
            self.LabelP2.place(relx=0.192, rely=0.186, height=70, width=15
                               , bordermode='ignore')
            self.LabelP2.configure(activebackground="#f9f9f9")
            self.LabelP2.configure(activeforeground="black")
            self.LabelP2.configure(background="green4")
            self.LabelP2.configure(disabledforeground="#a3a3a3")
            self.LabelP2.configure(font=("Segoe UI","30"))
            self.LabelP2.configure(foreground="#000000")
            self.LabelP2.configure(highlightbackground="#d9d9d9")
            self.LabelP2.configure(highlightcolor="black")
            self.LabelP2.configure(text=''')''')

            self.LabelAprime = Label(self.LabelframeT)
            self.LabelAprime.place(relx=0.697, rely=0.194, height=41, width=28
                                   , bordermode='ignore')
            self.LabelAprime.configure(background="lawn green")
            self.LabelAprime.configure(disabledforeground="#a3a3a3")
            self.LabelAprime.configure(font=("Segoe UI","15"))
            self.LabelAprime.configure(foreground="#000000")
            self.LabelAprime.configure(text='''A\'''')

            self.LabelAans = Label(self.LabelframeT)
            self.LabelAans.place(relx=0.737, rely=0.194, height=40, width=150
                                 , bordermode='ignore')
            self.LabelAans.configure(background="white")
            self.LabelAans.configure(disabledforeground="#a3a3a3")
            self.LabelAans.configure(font=("Segoe UI","13"))
            self.LabelAans.configure(foreground="#000000")
            self.LabelAans.configure(width=132)

        else:
            messagebox.showerror("oh no, something wrong!", "please enter number 1 to 4 only!")

    def transType(self):
        if self.Combobox.get() =="Translation":
            self.Labelframe1 = LabelFrame(self.LabelframeT)
            self.Labelframe1.place(relx=0.026, rely=0.151, relheight=0.806
                                   , relwidth=0.605, bordermode='ignore')
            self.Labelframe1.configure(relief=GROOVE)
            self.Labelframe1.configure(borderwidth="1")
            self.Labelframe1.configure(font=("Segoe UI","12","bold"))
            self.Labelframe1.configure(foreground="black")
            self.Labelframe1.configure(text='''Translation''')
            self.Labelframe1.configure(background="powder blue")
            self.Labelframe1.configure(width=460)

            self.LabelTranslate = Label(self.Labelframe1)
            self.LabelTranslate.place(relx=0.13, rely=0.16, height=34, width=248
                                      , bordermode='ignore')
            self.LabelTranslate.configure(activebackground="#f9f9f9")
            self.LabelTranslate.configure(activeforeground="black")
            self.LabelTranslate.configure(background="powder blue")
            self.LabelTranslate.configure(disabledforeground="#a3a3a3")
            self.LabelTranslate.configure(font=("Segoe UI", "12"))
            self.LabelTranslate.configure(foreground="#000000")
            self.LabelTranslate.configure(highlightbackground="#d9d9d9")
            self.LabelTranslate.configure(highlightcolor="black")
            self.LabelTranslate.configure(text='''enter the vector to translate''')

            self.LabelPt1 = Label(self.Labelframe1)
            self.LabelPt1.place(relx=0.196, rely=0.267, height=70, width=15
                                , bordermode='ignore')
            self.LabelPt1.configure(activebackground="#f9f9f9")
            self.LabelPt1.configure(activeforeground="black")
            self.LabelPt1.configure(background="powder blue")
            self.LabelPt1.configure(disabledforeground="#a3a3a3")
            self.LabelPt1.configure(font=("Segoe UI", "30"))
            self.LabelPt1.configure(foreground="#000000")
            self.LabelPt1.configure(highlightbackground="#d9d9d9")
            self.LabelPt1.configure(highlightcolor="black")
            self.LabelPt1.configure(text='''(''')

            self.EntryVx = Entry(self.Labelframe1)
            self.EntryVx.place(relx=0.239, rely=0.32, height=40, relwidth=0.109
                               , bordermode='ignore')
            self.EntryVx.configure(background="white")
            self.EntryVx.configure(disabledforeground="#a3a3a3")
            self.EntryVx.configure(font=("Courier New", "12"))
            self.EntryVx.configure(foreground="#000000")
            self.EntryVx.configure(highlightbackground="#d9d9d9")
            self.EntryVx.configure(highlightcolor="black")
            self.EntryVx.configure(insertbackground="black")
            self.EntryVx.configure(justify=CENTER)
            self.EntryVx.configure(selectbackground="#c4c4c4")
            self.EntryVx.configure(selectforeground="black")

            self.LabelCt = Label(self.Labelframe1)
            self.LabelCt.place(relx=0.348, rely=0.267, height=80, width=15
                               , bordermode='ignore')
            self.LabelCt.configure(activebackground="#f9f9f9")
            self.LabelCt.configure(activeforeground="black")
            self.LabelCt.configure(background="powder blue")
            self.LabelCt.configure(disabledforeground="#a3a3a3")
            self.LabelCt.configure(font=("Segoe UI", "30"))
            self.LabelCt.configure(foreground="#000000")
            self.LabelCt.configure(highlightbackground="#d9d9d9")
            self.LabelCt.configure(highlightcolor="black")
            self.LabelCt.configure(text=''',''')

            self.EntryVy = Entry(self.Labelframe1)
            self.EntryVy.place(relx=0.391, rely=0.32, height=40, relwidth=0.109
                               , bordermode='ignore')
            self.EntryVy.configure(background="white")
            self.EntryVy.configure(disabledforeground="#a3a3a3")
            self.EntryVy.configure(font=("Courier New", "12"))
            self.EntryVy.configure(foreground="#000000")
            self.EntryVy.configure(highlightbackground="#d9d9d9")
            self.EntryVy.configure(highlightcolor="black")
            self.EntryVy.configure(insertbackground="black")
            self.EntryVy.configure(justify=CENTER)
            self.EntryVy.configure(selectbackground="#c4c4c4")
            self.EntryVy.configure(selectforeground="black")

            self.LabelPt2 = Label(self.Labelframe1)
            self.LabelPt2.place(relx=0.511, rely=0.267, height=70, width=15
                                , bordermode='ignore')
            self.LabelPt2.configure(activebackground="#f9f9f9")
            self.LabelPt2.configure(activeforeground="black")
            self.LabelPt2.configure(background="powder blue")
            self.LabelPt2.configure(disabledforeground="#a3a3a3")
            self.LabelPt2.configure(font=("Segoe UI", "30"))
            self.LabelPt2.configure(foreground="#000000")
            self.LabelPt2.configure(highlightbackground="#d9d9d9")
            self.LabelPt2.configure(highlightcolor="black")
            self.LabelPt2.configure(text=''')''')

            self.B_translate = Button(self.Labelframe1)
            self.B_translate.place(relx=0.25, rely=0.48, height=50, width=110
                                   , bordermode='ignore')
            self.B_translate.configure(activebackground="#d9d9d9")
            self.B_translate.configure(activeforeground="#000000")
            self.B_translate.configure(background="black")
            self.B_translate.configure(disabledforeground="#a3a3a3")
            self.B_translate.configure(font=("Segoe UI", "12", "bold"))
            self.B_translate.configure(foreground="yellow")
            self.B_translate.configure(highlightbackground="#d9d9d9")
            self.B_translate.configure(highlightcolor="black")
            self.B_translate.configure(pady="0")
            self.B_translate.configure(text='''transform''')
            self.B_translate.configure(command = lambda : self.translation())
        elif self.Combobox.get() =="Rotation":
            self.Labelframe2 = LabelFrame(self.LabelframeT)
            self.Labelframe2.place(relx=0.026, rely=0.151, relheight=0.806
                                   , relwidth=0.605, bordermode='ignore')
            self.Labelframe2.configure(relief=GROOVE)
            self.Labelframe2.configure(borderwidth="1")
            self.Labelframe2.configure(font=("Segoe UI", "12", "bold"))
            self.Labelframe2.configure(foreground="black")
            self.Labelframe2.configure(text='''Rotation''')
            self.Labelframe2.configure(background="powder blue")
            self.Labelframe2.configure(width=460)

            self.B_rotate = Button(self.Labelframe2)
            self.B_rotate.place(relx=0.38, rely=0.64, height=50, width=110
                                , bordermode='ignore')
            self.B_rotate.configure(activebackground="#d9d9d9")
            self.B_rotate.configure(activeforeground="#000000")
            self.B_rotate.configure(background="black")
            self.B_rotate.configure(disabledforeground="#a3a3a3")
            self.B_rotate.configure(font=("Segoe UI","12","bold"))
            self.B_rotate.configure(foreground="yellow")
            self.B_rotate.configure(highlightbackground="#d9d9d9")
            self.B_rotate.configure(highlightcolor="black")
            self.B_rotate.configure(pady="0")
            self.B_rotate.configure(text='''transform''')
            self.B_rotate.configure(command = lambda : self.rotation())

            self.LabelAngle = Label(self.Labelframe2)
            self.LabelAngle.place(relx=0.174, rely=0.08, height=62, width=251
                                  , bordermode='ignore')
            self.LabelAngle.configure(activebackground="#f9f9f9")
            self.LabelAngle.configure(activeforeground="black")
            self.LabelAngle.configure(background="powder blue")
            self.LabelAngle.configure(disabledforeground="#a3a3a3")
            self.LabelAngle.configure(font=("Segoe UI","12"))
            self.LabelAngle.configure(foreground="#000000")
            self.LabelAngle.configure(highlightbackground="#d9d9d9")
            self.LabelAngle.configure(highlightcolor="black")
            self.LabelAngle.configure(text='''enter angle to rotate
            (negative for anti-clockwise)''')

            self.EntryAngle = Entry(self.Labelframe2)
            self.EntryAngle.place(relx=0.391, rely=0.267, height=40, relwidth=0.109
                                  , bordermode='ignore')
            self.EntryAngle.configure(background="white")
            self.EntryAngle.configure(borderwidth="2")
            self.EntryAngle.configure(disabledforeground="#a3a3a3")
            self.EntryAngle.configure(font="TkFixedFont")
            self.EntryAngle.configure(foreground="#000000")
            self.EntryAngle.configure(highlightbackground="#d9d9d9")
            self.EntryAngle.configure(highlightcolor="black")
            self.EntryAngle.configure(insertbackground="black")
            self.EntryAngle.configure(justify=RIGHT)
            self.EntryAngle.configure(selectbackground="#c4c4c4")
            self.EntryAngle.configure(selectforeground="black")

            self.LabelPr1 = Label(self.Labelframe2)
            self.LabelPr1.place(relx=0.326, rely=0.4, height=70, width=15
                                , bordermode='ignore')
            self.LabelPr1.configure(activebackground="#f9f9f9")
            self.LabelPr1.configure(activeforeground="black")
            self.LabelPr1.configure(background="powder blue")
            self.LabelPr1.configure(disabledforeground="#a3a3a3")
            self.LabelPr1.configure(font=("Segoe UI", "30", "bold"))
            self.LabelPr1.configure(foreground="#000000")
            self.LabelPr1.configure(highlightbackground="#d9d9d9")
            self.LabelPr1.configure(highlightcolor="black")
            self.LabelPr1.configure(text='''(''')

            self.EntryAngleOx = Entry(self.Labelframe2)
            self.EntryAngleOx.place(relx=0.37, rely=0.453, height=40, relwidth=0.109
                                    , bordermode='ignore')
            self.EntryAngleOx.configure(background="white")
            self.EntryAngleOx.configure(borderwidth="2")
            self.EntryAngleOx.configure(disabledforeground="#a3a3a3")
            self.EntryAngleOx.configure(font="TkFixedFont")
            self.EntryAngleOx.configure(foreground="#000000")
            self.EntryAngleOx.configure(highlightbackground="#d9d9d9")
            self.EntryAngleOx.configure(highlightcolor="black")
            self.EntryAngleOx.configure(insertbackground="black")
            self.EntryAngleOx.configure(justify=RIGHT)
            self.EntryAngleOx.configure(selectbackground="#c4c4c4")
            self.EntryAngleOx.configure(selectforeground="black")
            self.EntryAngleOx.configure(font=("Courier New", "12"))

            self.LabelCRotate = Label(self.Labelframe2)
            self.LabelCRotate.place(relx=0.478, rely=0.4, height=80, width=15
                                    , bordermode='ignore')
            self.LabelCRotate.configure(activebackground="#f9f9f9")
            self.LabelCRotate.configure(activeforeground="black")
            self.LabelCRotate.configure(background="powder blue")
            self.LabelCRotate.configure(disabledforeground="#a3a3a3")
            self.LabelCRotate.configure(font=("Segoe UI", "30", "bold"))
            self.LabelCRotate.configure(foreground="#000000")
            self.LabelCRotate.configure(highlightbackground="#d9d9d9")
            self.LabelCRotate.configure(highlightcolor="black")
            self.LabelCRotate.configure(text=''',''')

            self.EntryAngleOy = Entry(self.Labelframe2)
            self.EntryAngleOy.place(relx=0.522, rely=0.453, height=40, relwidth=0.109
                                    , bordermode='ignore')
            self.EntryAngleOy.configure(background="white")
            self.EntryAngleOy.configure(disabledforeground="#a3a3a3")
            self.EntryAngleOy.configure(font=("Courier New", "12"))
            self.EntryAngleOy.configure(foreground="#000000")
            self.EntryAngleOy.configure(highlightbackground="#d9d9d9")
            self.EntryAngleOy.configure(highlightcolor="black")
            self.EntryAngleOy.configure(insertbackground="black")
            self.EntryAngleOy.configure(justify=CENTER)
            self.EntryAngleOy.configure(selectbackground="#c4c4c4")
            self.EntryAngleOy.configure(selectforeground="black")

            self.LabelPr2 = Label(self.Labelframe2)
            self.LabelPr2.place(relx=0.641, rely=0.4, height=70, width=15
                                , bordermode='ignore')
            self.LabelPr2.configure(activebackground="#f9f9f9")
            self.LabelPr2.configure(activeforeground="black")
            self.LabelPr2.configure(background="powder blue")
            self.LabelPr2.configure(disabledforeground="#a3a3a3")
            self.LabelPr2.configure(font=("Segoe UI", "30", "bold"))
            self.LabelPr2.configure(foreground="#000000")
            self.LabelPr2.configure(highlightbackground="#d9d9d9")
            self.LabelPr2.configure(highlightcolor="black")
            self.LabelPr2.configure(text=''')''')

            self.LabelAngleO = Label(self.Labelframe2)
            self.LabelAngleO.place(relx=0.043, rely=0.453, height=34, width=116
                                   , bordermode='ignore')
            self.LabelAngleO.configure(activebackground="#f9f9f9")
            self.LabelAngleO.configure(activeforeground="black")
            self.LabelAngleO.configure(background="powder blue")
            self.LabelAngleO.configure(disabledforeground="#a3a3a3")
            self.LabelAngleO.configure(font=("Segoe UI", "12"))
            self.LabelAngleO.configure(foreground="#000000")
            self.LabelAngleO.configure(highlightbackground="#d9d9d9")
            self.LabelAngleO.configure(highlightcolor="black")
            self.LabelAngleO.configure(text='''rotate origin''')
        elif self.Combobox.get() =="Reflection":
            self.Labelframe3 = LabelFrame(self.LabelframeT)
            self.Labelframe3.place(relx=0.026, rely=0.151, relheight=0.806
                                   , relwidth=0.605, bordermode='ignore')
            self.Labelframe3.configure(relief=GROOVE)
            self.Labelframe3.configure(borderwidth="1")
            self.Labelframe3.configure(font=("Segoe UI", "12", "bold"))
            self.Labelframe3.configure(foreground="black")
            self.Labelframe3.configure(text='''Reflection''')
            self.Labelframe3.configure(background="powder blue")
            self.Labelframe3.configure(width=460)

            self.B_Treflect = Button(self.Labelframe3)
            self.B_Treflect.place(relx=0.457, rely=0.533, height=40, width=100
                                  , bordermode='ignore')
            self.B_Treflect.configure(activebackground="#d9d9d9")
            self.B_Treflect.configure(activeforeground="#000000")
            self.B_Treflect.configure(background="black")
            self.B_Treflect.configure(disabledforeground="#a3a3a3")
            self.B_Treflect.configure(font=("Segoe UI", "12","bold"))
            self.B_Treflect.configure(foreground="yellow")
            self.B_Treflect.configure(highlightbackground="#d9d9d9")
            self.B_Treflect.configure(highlightcolor="black")
            self.B_Treflect.configure(pady="0")
            self.B_Treflect.configure(text='''transform''')
            self.B_Treflect.configure(command = lambda : self.reflectInlineY())

            self.B_reflectY = Button(self.Labelframe3)
            self.B_reflectY.place(relx=0.109, rely=0.08, height=40, width=161
                                  , bordermode='ignore')
            self.B_reflectY.configure(activebackground="#d9d9d9")
            self.B_reflectY.configure(activeforeground="#000000")
            self.B_reflectY.configure(background="#d9d9d9")
            self.B_reflectY.configure(borderwidth="3")
            self.B_reflectY.configure(disabledforeground="#a3a3a3")
            self.B_reflectY.configure(font=("Segoe UI","10"))
            self.B_reflectY.configure(foreground="#000000")
            self.B_reflectY.configure(highlightbackground="#d9d9d9")
            self.B_reflectY.configure(highlightcolor="black")
            self.B_reflectY.configure(pady="0")
            self.B_reflectY.configure(text='''reflect in the y-axis''')
            self.B_reflectY.configure(command = lambda : self.reflectInYaxis())

            self.B_reflectX = Button(self.Labelframe3)
            self.B_reflectX.place(relx=0.543, rely=0.08, height=40, width=161
                                  , bordermode='ignore')
            self.B_reflectX.configure(activebackground="#d9d9d9")
            self.B_reflectX.configure(activeforeground="#000000")
            self.B_reflectX.configure(background="#d9d9d9")
            self.B_reflectX.configure(borderwidth="3")
            self.B_reflectX.configure(disabledforeground="#a3a3a3")
            self.B_reflectX.configure(font=("Segoe UI","10"))
            self.B_reflectX.configure(foreground="#000000")
            self.B_reflectX.configure(highlightbackground="#d9d9d9")
            self.B_reflectX.configure(highlightcolor="black")
            self.B_reflectX.configure(pady="0")
            self.B_reflectX.configure(text='''reflect in the x-axis''')
            self.B_reflectX.configure(command = lambda : self.reflectInXaxis())

            self.B_reflectO = Button(self.Labelframe3)
            self.B_reflectO.place(relx=0.326, rely=0.213, height=40, width=162
                                  , bordermode='ignore')
            self.B_reflectO.configure(activebackground="#d9d9d9")
            self.B_reflectO.configure(activeforeground="#000000")
            self.B_reflectO.configure(background="#d9d9d9")
            self.B_reflectO.configure(borderwidth="3")
            self.B_reflectO.configure(disabledforeground="#a3a3a3")
            self.B_reflectO.configure(font=("Segoe UI","10"))
            self.B_reflectO.configure(foreground="#000000")
            self.B_reflectO.configure(highlightbackground="#d9d9d9")
            self.B_reflectO.configure(highlightcolor="black")
            self.B_reflectO.configure(pady="0")
            self.B_reflectO.configure(text='''reflect in the origin''')
            self.B_reflectO.configure(command = lambda : self.reflectInOrigin())

            self.LabelReflectLiney = Label(self.Labelframe3)
            self.LabelReflectLiney.place(relx=0.065, rely=0.4, height=29, width=164
                                         , bordermode='ignore')
            self.LabelReflectLiney.configure(activebackground="#f9f9f9")
            self.LabelReflectLiney.configure(activeforeground="black")
            self.LabelReflectLiney.configure(background="powder blue")
            self.LabelReflectLiney.configure(disabledforeground="#a3a3a3")
            self.LabelReflectLiney.configure(font=("Segoe UI","10"))
            self.LabelReflectLiney.configure(foreground="#000000")
            self.LabelReflectLiney.configure(highlightbackground="#d9d9d9")
            self.LabelReflectLiney.configure(highlightcolor="black")
            self.LabelReflectLiney.configure(text='''reflect in the line y =''')

            self.LabelReflectLinex = Label(self.Labelframe3)
            self.LabelReflectLinex.place(relx=0.065, rely=0.693, height=29, width=164
                                         , bordermode='ignore')
            self.LabelReflectLinex.configure(activebackground="#f9f9f9")
            self.LabelReflectLinex.configure(activeforeground="black")
            self.LabelReflectLinex.configure(background="powder blue")
            self.LabelReflectLinex.configure(disabledforeground="#a3a3a3")
            self.LabelReflectLinex.configure(font=("Segoe UI","10"))
            self.LabelReflectLinex.configure(foreground="#000000")
            self.LabelReflectLinex.configure(highlightbackground="#d9d9d9")
            self.LabelReflectLinex.configure(highlightcolor="black")
            self.LabelReflectLinex.configure(text='''reflect in the line x =''')

            self.EntryM = Entry(self.Labelframe3)
            self.EntryM.place(relx=0.413, rely=0.387, height=40, relwidth=0.109
                              , bordermode='ignore')
            self.EntryM.configure(background="white")
            self.EntryM.configure(disabledforeground="#a3a3a3")
            self.EntryM.configure(font=("Courier New","12"))
            self.EntryM.configure(foreground="#000000")
            self.EntryM.configure(highlightbackground="#d9d9d9")
            self.EntryM.configure(highlightcolor="black")
            self.EntryM.configure(insertbackground="black")
            self.EntryM.configure(justify=CENTER)
            self.EntryM.configure(selectbackground="#c4c4c4")
            self.EntryM.configure(selectforeground="black")

            self.Label4 = Label(self.Labelframe3)
            self.Label4.place(relx=0.522, rely=0.373, height=51, width=44
                              , bordermode='ignore')
            self.Label4.configure(activebackground="#f9f9f9")
            self.Label4.configure(activeforeground="black")
            self.Label4.configure(background="powder blue")
            self.Label4.configure(disabledforeground="#a3a3a3")
            self.Label4.configure(font=("Segoe UI","20"))
            self.Label4.configure(foreground="#000000")
            self.Label4.configure(highlightbackground="#d9d9d9")
            self.Label4.configure(highlightcolor="black")
            self.Label4.configure(text='''x+''')

            self.EntryC = Entry(self.Labelframe3)
            self.EntryC.place(relx=0.609, rely=0.387, height=40, relwidth=0.109
                              , bordermode='ignore')
            self.EntryC.configure(background="white")
            self.EntryC.configure(disabledforeground="#a3a3a3")
            self.EntryC.configure(font=("Courier New","12"))
            self.EntryC.configure(foreground="#000000")
            self.EntryC.configure(highlightbackground="#d9d9d9")
            self.EntryC.configure(highlightcolor="black")
            self.EntryC.configure(insertbackground="black")
            self.EntryC.configure(justify=CENTER)
            self.EntryC.configure(selectbackground="#c4c4c4")
            self.EntryC.configure(selectforeground="black")

            self.EntryX = Entry(self.Labelframe3)
            self.EntryX.place(relx=0.424, rely=0.68, height=40, relwidth=0.109
                              , bordermode='ignore')
            self.EntryX.configure(background="white")
            self.EntryX.configure(disabledforeground="#a3a3a3")
            self.EntryX.configure(font=("Courier New","12"))
            self.EntryX.configure(foreground="#000000")
            self.EntryX.configure(highlightbackground="#d9d9d9")
            self.EntryX.configure(highlightcolor="black")
            self.EntryX.configure(insertbackground="black")
            self.EntryX.configure(justify=CENTER)
            self.EntryX.configure(selectbackground="#c4c4c4")
            self.EntryX.configure(selectforeground="black")

            self.B_Treflectx = Button(self.Labelframe3)
            self.B_Treflectx.place(relx=0.457, rely=0.827, height=40, width=100
                                   , bordermode='ignore')
            self.B_Treflectx.configure(activebackground="#d9d9d9")
            self.B_Treflectx.configure(activeforeground="#000000")
            self.B_Treflectx.configure(background="black")
            self.B_Treflectx.configure(disabledforeground="#a3a3a3")
            self.B_Treflectx.configure(font=("Segoe UI","12","bold"))
            self.B_Treflectx.configure(foreground="yellow")
            self.B_Treflectx.configure(highlightbackground="#d9d9d9")
            self.B_Treflectx.configure(highlightcolor="black")
            self.B_Treflectx.configure(pady="0")
            self.B_Treflectx.configure(text='''transform''')
            self.B_Treflectx.configure(command = lambda : self.reflectInlineX())
        elif self.Combobox.get() =="Scaling":
            self.Labelframe4 = LabelFrame(self.LabelframeT)
            self.Labelframe4.place(relx=0.026, rely=0.151, relheight=0.806
                                   , relwidth=0.605, bordermode='ignore')
            self.Labelframe4.configure(relief=GROOVE)
            self.Labelframe4.configure(borderwidth="1")
            self.Labelframe4.configure(font=("Segoe UI", "12", "bold"))
            self.Labelframe4.configure(foreground="black")
            self.Labelframe4.configure(text='''Scaling''')
            self.Labelframe4.configure(background="powder blue")
            self.Labelframe4.configure(width=460)

            self.B_Tscale = Button(self.Labelframe4)
            self.B_Tscale.place(relx=0.38, rely=0.56, height=40, width=100
                                , bordermode='ignore')
            self.B_Tscale.configure(activebackground="#d9d9d9")
            self.B_Tscale.configure(activeforeground="#000000")
            self.B_Tscale.configure(background="black")
            self.B_Tscale.configure(disabledforeground="#a3a3a3")
            self.B_Tscale.configure(font=("Segoe UI","12","bold"))
            self.B_Tscale.configure(foreground="yellow")
            self.B_Tscale.configure(highlightbackground="#d9d9d9")
            self.B_Tscale.configure(highlightcolor="black")
            self.B_Tscale.configure(pady="0")
            self.B_Tscale.configure(text='''transform''')
            self.B_Tscale.configure(command = lambda : self.scaling())

            self.LabelFactor = Label(self.Labelframe4)
            self.LabelFactor.place(relx=0.196, rely=0.133, height=34, width=104
                                   , bordermode='ignore')
            self.LabelFactor.configure(activebackground="#f9f9f9")
            self.LabelFactor.configure(activeforeground="black")
            self.LabelFactor.configure(background="powder blue")
            self.LabelFactor.configure(disabledforeground="#a3a3a3")
            self.LabelFactor.configure(font=("Segoe UI","12"))
            self.LabelFactor.configure(foreground="#000000")
            self.LabelFactor.configure(highlightbackground="#d9d9d9")
            self.LabelFactor.configure(highlightcolor="black")
            self.LabelFactor.configure(text='''scale factor''')

            self.EntryFactor = Entry(self.Labelframe4)
            self.EntryFactor.place(relx=0.435, rely=0.133, height=40, relwidth=0.109
                                   , bordermode='ignore')
            self.EntryFactor.configure(background="white")
            self.EntryFactor.configure(disabledforeground="#a3a3a3")
            self.EntryFactor.configure(font="TkFixedFont")
            self.EntryFactor.configure(foreground="#000000")
            self.EntryFactor.configure(highlightbackground="#d9d9d9")
            self.EntryFactor.configure(highlightcolor="black")
            self.EntryFactor.configure(insertbackground="black")
            self.EntryFactor.configure(selectbackground="#c4c4c4")
            self.EntryFactor.configure(selectforeground="black")

            self.LabelScaleO = Label(self.Labelframe4)
            self.LabelScaleO.place(relx=0.065, rely=0.373, height=34, width=123
                                   , bordermode='ignore')
            self.LabelScaleO.configure(activebackground="#f9f9f9")
            self.LabelScaleO.configure(activeforeground="black")
            self.LabelScaleO.configure(background="powder blue")
            self.LabelScaleO.configure(disabledforeground="#a3a3a3")
            self.LabelScaleO.configure(font=("Segoe UI","12"))
            self.LabelScaleO.configure(foreground="#000000")
            self.LabelScaleO.configure(highlightbackground="#d9d9d9")
            self.LabelScaleO.configure(highlightcolor="black")
            self.LabelScaleO.configure(text='''scaling origin''')

            self.LabelPS1 = Label(self.Labelframe4)
            self.LabelPS1.place(relx=0.328, rely=0.32, height=70, width=15
                                , bordermode='ignore')
            self.LabelPS1.configure(activebackground="#f9f9f9")
            self.LabelPS1.configure(activeforeground="black")
            self.LabelPS1.configure(background="powder blue")
            self.LabelPS1.configure(disabledforeground="#a3a3a3")
            self.LabelPS1.configure(font=("Segoe UI","30"))
            self.LabelPS1.configure(foreground="#000000")
            self.LabelPS1.configure(highlightbackground="#d9d9d9")
            self.LabelPS1.configure(highlightcolor="black")
            self.LabelPS1.configure(text='''(''')

            self.EntryScaleOx = Entry(self.Labelframe4)
            self.EntryScaleOx.place(relx=0.37, rely=0.373, height=40, relwidth=0.109
                                    , bordermode='ignore')
            self.EntryScaleOx.configure(background="white")
            self.EntryScaleOx.configure(disabledforeground="#a3a3a3")
            self.EntryScaleOx.configure(font=("Courier New", "12"))
            self.EntryScaleOx.configure(foreground="#000000")
            self.EntryScaleOx.configure(highlightbackground="#d9d9d9")
            self.EntryScaleOx.configure(highlightcolor="black")
            self.EntryScaleOx.configure(insertbackground="black")
            self.EntryScaleOx.configure(selectbackground="#c4c4c4")
            self.EntryScaleOx.configure(selectforeground="black")

            self.LabelCO = Label(self.Labelframe4)
            self.LabelCO.place(relx=0.478, rely=0.32, height=80, width=15
                               , bordermode='ignore')
            self.LabelCO.configure(activebackground="#f9f9f9")
            self.LabelCO.configure(activeforeground="black")
            self.LabelCO.configure(background="powder blue")
            self.LabelCO.configure(disabledforeground="#a3a3a3")
            self.LabelCO.configure(font=("Segoe UI","30"))
            self.LabelCO.configure(foreground="#000000")
            self.LabelCO.configure(highlightbackground="#d9d9d9")
            self.LabelCO.configure(highlightcolor="black")
            self.LabelCO.configure(text=''',''')

            self.EntryScaleOy = Entry(self.Labelframe4)
            self.EntryScaleOy.place(relx=0.522, rely=0.373, height=40, relwidth=0.109
                                    , bordermode='ignore')
            self.EntryScaleOy.configure(background="white")
            self.EntryScaleOy.configure(disabledforeground="#a3a3a3")
            self.EntryScaleOy.configure(font=("Courier New","12"))
            self.EntryScaleOy.configure(foreground="#000000")
            self.EntryScaleOy.configure(highlightbackground="#d9d9d9")
            self.EntryScaleOy.configure(highlightcolor="black")
            self.EntryScaleOy.configure(insertbackground="black")
            self.EntryScaleOy.configure(justify=CENTER)
            self.EntryScaleOy.configure(selectbackground="#c4c4c4")
            self.EntryScaleOy.configure(selectforeground="black")

            self.LabelPS2 = Label(self.Labelframe4)
            self.LabelPS2.place(relx=0.641, rely=0.32, height=70, width=15
                                , bordermode='ignore')
            self.LabelPS2.configure(activebackground="#f9f9f9")
            self.LabelPS2.configure(activeforeground="black")
            self.LabelPS2.configure(background="powder blue")
            self.LabelPS2.configure(disabledforeground="#a3a3a3")
            self.LabelPS2.configure(font=("Segoe UI","30"))
            self.LabelPS2.configure(foreground="#000000")
            self.LabelPS2.configure(highlightbackground="#d9d9d9")
            self.LabelPS2.configure(highlightcolor="black")
            self.LabelPS2.configure(text=''')''')
        elif self.Combobox.get() =="Shear":
            self.Labelframe5 = LabelFrame(self.LabelframeT)
            self.Labelframe5.place(relx=0.026, rely=0.151, relheight=0.806
                                   , relwidth=0.605, bordermode='ignore')
            self.Labelframe5.configure(relief=GROOVE)
            self.Labelframe5.configure(borderwidth="1")
            self.Labelframe5.configure(font=("Segoe UI", "12", "bold"))
            self.Labelframe5.configure(foreground="black")
            self.Labelframe5.configure(text='''Shear''')
            self.Labelframe5.configure(background="powder blue")
            self.Labelframe5.configure(width=460)

            self.LabelShearF = Label(self.Labelframe5)
            self.LabelShearF.place(relx=0.109, rely=0.133, height=34, width=108
                                   , bordermode='ignore')
            self.LabelShearF.configure(activebackground="#f9f9f9")
            self.LabelShearF.configure(activeforeground="black")
            self.LabelShearF.configure(background="powder blue")
            self.LabelShearF.configure(disabledforeground="#a3a3a3")
            self.LabelShearF.configure(font=("Segoe UI", "12"))
            self.LabelShearF.configure(foreground="#000000")
            self.LabelShearF.configure(highlightbackground="#d9d9d9")
            self.LabelShearF.configure(highlightcolor="black")
            self.LabelShearF.configure(text='''shear factor''')

            self.EntryShearFactor = Entry(self.Labelframe5)
            self.EntryShearFactor.place(relx=0.37, rely=0.133, height=40, relwidth=0.109
                                   , bordermode='ignore')
            self.EntryShearFactor.configure(background="white")
            self.EntryShearFactor.configure(disabledforeground="#a3a3a3")
            self.EntryShearFactor.configure(font="TkFixedFont")
            self.EntryShearFactor.configure(foreground="#000000")
            self.EntryShearFactor.configure(highlightbackground="#d9d9d9")
            self.EntryShearFactor.configure(highlightcolor="black")
            self.EntryShearFactor.configure(insertbackground="black")
            self.EntryShearFactor.configure(selectbackground="#c4c4c4")
            self.EntryShearFactor.configure(selectforeground="black")

            self.Button6 = Button(self.Labelframe5)
            self.Button6.place(relx=0.239, rely=0.293, height=35, width=160
                               , bordermode='ignore')
            self.Button6.configure(activebackground="#d9d9d9")
            self.Button6.configure(activeforeground="#000000")
            self.Button6.configure(background="#d9d9d9")
            self.Button6.configure(borderwidth="3")
            self.Button6.configure(disabledforeground="#a3a3a3")
            self.Button6.configure(foreground="#000000")
            self.Button6.configure(highlightbackground="#d9d9d9")
            self.Button6.configure(highlightcolor="black")
            self.Button6.configure(pady="0")
            self.Button6.configure(text='''horizontal shear''')
            self.Button6.configure(font=("Segoe UI", "12"))
            self.Button6.configure(command = lambda : self.horizontalShear())

            self.Button7 = Button(self.Labelframe5)
            self.Button7.place(relx=0.239, rely=0.453, height=35, width=160
                               , bordermode='ignore')
            self.Button7.configure(activebackground="#d9d9d9")
            self.Button7.configure(activeforeground="#000000")
            self.Button7.configure(background="#d9d9d9")
            self.Button7.configure(borderwidth="3")
            self.Button7.configure(disabledforeground="#a3a3a3")
            self.Button7.configure(font=("Segoe UI", "12"))
            self.Button7.configure(foreground="#000000")
            self.Button7.configure(highlightbackground="#d9d9d9")
            self.Button7.configure(highlightcolor="black")
            self.Button7.configure(pady="0")
            self.Button7.configure(text='''vertical shear''')
            self.Button7.configure(command = lambda : self.verticalShear())
        else:
            messagebox.showerror("no selection", "oh man, please choose any type.")

    def pointA(self):
        self.Ax = float(self.EntryA_x.get())
        self.Ay = float(self.EntryA_y.get())

    def pointB(self):
        self.Bx = float(self.EntryB_x.get())
        self.By = float(self.EntryB_y.get())

    def pointC(self):
        self.Cx = float(self.EntryC_x.get())
        self.Cy = float(self.EntryC_y.get())

    def pointD(self):
        self.Dx = float(self.EntryD_x.get())
        self.Dy = float(self.EntryD_y.get())

    def translation(self):
        self.vectorX = float(self.EntryVx.get())
        self.vectorY = float(self.EntryVy.get())
        if self.EntryNum.get() =="4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            ansAx = (self.Ax + self.vectorX)
            ansAy = (self.Ay + self.vectorY)
            ansBx = (self.Bx + self.vectorX)
            ansBy = (self.By + self.vectorY)
            ansCx = (self.Cx + self.vectorX)
            ansCy = (self.Cy + self.vectorY)
            ansDx = (self.Dx + self.vectorX)
            ansDy = (self.Dy + self.vectorY)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(ansCy) + " )")
            self.LabelDans.configure(text="( " + str(ansDx) + ", " + str(ansDy) + " )")
        elif self.EntryNum.get() =="3":
            self.pointA(), self.pointB(), self.pointC()
            ansAx = (self.Ax + self.vectorX)
            ansAy = (self.Ay + self.vectorY)
            ansBx = (self.Bx + self.vectorX)
            ansBy = (self.By + self.vectorY)
            ansCx = (self.Cx + self.vectorX)
            ansCy = (self.Cy + self.vectorY)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(ansCy) + " )")
        elif self.EntryNum.get() =="2":
            self.pointA(), self.pointB()
            ansAx = (self.Ax + self.vectorX)
            ansAy = (self.Ay + self.vectorY)
            ansBx = (self.Bx + self.vectorX)
            ansBy = (self.By + self.vectorY)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
        else:
            self.pointA()
            ansAx = (self.Ax + self.vectorX)
            ansAy = (self.Ay + self.vectorY)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")

    def rotation(self):
        self.originX = float(self.EntryAngleOx.get())
        self.originY = float(self.EntryAngleOy.get())
        self.angleEntered = float(self.EntryAngle.get())
        self.angleToRad = radians(self.angleEntered)
        if self.EntryNum.get() == "4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            AminusOx = round(((self.Ax-self.originX)*cos(self.angleToRad))+
                             ((self.Ay-self.originY)* sin(self.angleToRad)),2)
            ansAx = (AminusOx + self.originX)
            AminusOy = round(((self.Ax-self.originX)*-sin(self.angleToRad))+
                             ((self.Ay-self.originY)* cos(self.angleToRad)),2)
            ansAy = (AminusOy + self.originY)
            BminusOx = round(((self.Bx-self.originX)*cos(self.angleToRad))+
                             ((self.By-self.originY)* sin(self.angleToRad)),2)
            ansBx = (BminusOx + self.originX)
            BminusOy = round(((self.Bx-self.originX)*-sin(self.angleToRad))+
                             ((self.By-self.originY)* cos(self.angleToRad)),2)
            ansBy = (BminusOy + self.originY)
            CminusOx = round(((self.Cx-self.originX)*cos(self.angleToRad))+
                             ((self.Cy-self.originY)* sin(self.angleToRad)),2)
            ansCx = (CminusOx + self.originX)
            CminusOy = round(((self.Cx-self.originX)* -sin(self.angleToRad))+
                             ((self.Cy-self.originY)* cos(self.angleToRad)),2)
            ansCy = (CminusOy + self.originY)
            DminusOx = round(((self.Dx-self.originX)*cos(self.angleToRad))+
                             ((self.Dy-self.originY)* sin(self.angleToRad)),2)
            ansDx = (DminusOx + self.originX)
            DminusOy = round(((self.Dx-self.originX)* -sin(self.angleToRad))+
                             ((self.Dy-self.originY)* cos(self.angleToRad)),2)
            ansDy = (DminusOy + self.originY)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(ansCy) + " )")
            self.LabelDans.configure(text="( " + str(ansDx) + ", " + str(ansDy) + " )")
        elif self.EntryNum.get() == "3":
            self.pointA(), self.pointB(), self.pointC()
            AminusOx = round(((self.Ax - self.originX) * cos(self.angleToRad)) +
                             ((self.Ay - self.originY) * sin(self.angleToRad)),2)
            ansAx = (AminusOx + self.originX)
            AminusOy = round(((self.Ax - self.originX) * -sin(self.angleToRad)) +
                             ((self.Ay - self.originY) * cos(self.angleToRad)),2)
            ansAy = (AminusOy + self.originY)
            BminusOx = round(((self.Bx - self.originX) * cos(self.angleToRad)) +
                             ((self.By - self.originY) * sin(self.angleToRad)),2)
            ansBx = (BminusOx + self.originX)
            BminusOy = round(((self.Bx - self.originX) * -sin(self.angleToRad)) +
                             ((self.By - self.originY) * cos(self.angleToRad)),2)
            ansBy = (BminusOy + self.originY)
            CminusOx = round(((self.Cx - self.originX) * cos(self.angleToRad)) +
                             ((self.Cy - self.originY) * sin(self.angleToRad)),2)
            ansCx = (CminusOx + self.originX)
            CminusOy = round(((self.Cx - self.originX) * -sin(self.angleToRad)) +
                             ((self.Cy - self.originY) * cos(self.angleToRad)),2)
            ansCy = (CminusOy + self.originY)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(ansCy) + " )")
        elif self.EntryNum.get() == "2":
            self.pointA(), self.pointB()
            AminusOx = round(((self.Ax - self.originX) * cos(self.angleToRad)) +
                             ((self.Ay - self.originY) * sin(self.angleToRad)),2)
            ansAx = (AminusOx + self.originX)
            AminusOy = round(((self.Ax - self.originX) * -sin(self.angleToRad)) +
                             ((self.Ay - self.originY) * cos(self.angleToRad)),2)
            ansAy = (AminusOy + self.originY)
            BminusOx = round(((self.Bx - self.originX) * cos(self.angleToRad)) +
                             ((self.By - self.originY) * sin(self.angleToRad)),2)
            ansBx = (BminusOx + self.originX)
            BminusOy = round(((self.Bx - self.originX) * -sin(self.angleToRad)) +
                             ((self.By - self.originY) * cos(self.angleToRad)),2)
            ansBy = (BminusOy + self.originY)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
        else:
            self.pointA()
            AminusOx = round(((self.Ax - self.originX) * cos(self.angleToRad)) +
                             ((self.Ay - self.originY) * sin(self.angleToRad)),2)
            ansAx = (AminusOx + self.originX)
            AminusOy = round(((self.Ax - self.originX) * -sin(self.angleToRad)) +
                             ((self.Ay - self.originY) * cos(self.angleToRad)),2)
            ansAy = (AminusOy + self.originY)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")

    def reflectInYaxis(self):
        if self.EntryNum.get() == "4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            ansAx = (self.Ax -2*self.Ax)
            ansBx = (self.Bx -2*self.Bx)
            ansCx = (self.Cx -2*self.Cx)
            ansDx = (self.Dx -2*self.Dx)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(self.Cy) + " )")
            self.LabelDans.configure(text="( " + str(ansDx) + ", " + str(self.Dy) + " )")
        elif self.EntryNum.get() == "3":
            self.pointA(), self.pointB(), self.pointC()
            ansAx = (self.Ax - 2 * self.Ax)
            ansBx = (self.Bx - 2 * self.Bx)
            ansCx = (self.Cx - 2 * self.Cx)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(self.Cy) + " )")
        elif self.EntryNum.get() == "2":
            self.pointA(), self.pointB()
            ansAx = (self.Ax - 2 * self.Ax)
            ansBx = (self.Bx - 2 * self.Bx)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
        else:
            self.pointA()
            ansAx = (self.Ax - 2 * self.Ax)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")

    def reflectInXaxis(self):
        if self.EntryNum.get() == "4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            ansAy = (self.Ay -2*self.Ay)
            ansBy = (self.By -2*self.By)
            ansCy = (self.Cy -2*self.Cy)
            ansDy = (self.Dy -2*self.Dy)
            self.LabelAans.configure(text="( " + str(self.Ax) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(self.Bx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(self.Cx) + ", " + str(ansCy) + " )")
            self.LabelDans.configure(text="( " + str(self.Dx) + ", " + str(ansDy) + " )")
        elif self.EntryNum.get() == "3":
            self.pointA(), self.pointB(), self.pointC()
            ansAy = (self.Ay - 2 * self.Ay)
            ansBy = (self.By - 2 * self.By)
            ansCy = (self.Cy - 2 * self.Cy)
            self.LabelAans.configure(text="( " + str(self.Ax) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(self.Bx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(self.Cx) + ", " + str(ansCy) + " )")
        elif self.EntryNum.get() == "2":
            self.pointA(), self.pointB()
            ansAy = (self.Ay - 2 * self.Ay)
            ansBy = (self.By - 2 * self.By)
            self.LabelAans.configure(text="( " + str(self.Ax) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(self.Bx) + ", " + str(ansBy) + " )")
        else:
            self.pointA()
            ansAy = (self.Ay - 2 * self.Ay)
            self.LabelAans.configure(text="( " + str(self.Ax) + ", " + str(ansAy) + " )")

    def reflectInOrigin(self):
        if self.EntryNum.get() == "4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            self.LabelAans.configure(text="( " + str(-self.Ax) + ", " + str(-self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(-self.Bx) + ", " + str(-self.By) + " )")
            self.LabelCans.configure(text="( " + str(-self.Cx) + ", " + str(-self.Cy) + " )")
            self.LabelDans.configure(text="( " + str(-self.Dx) + ", " + str(-self.Dy) + " )")
        elif self.EntryNum.get() == "3":
            self.pointA(), self.pointB(), self.pointC()
            self.LabelAans.configure(text="( " + str(-self.Ax) + ", " + str(-self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(-self.Bx) + ", " + str(-self.By) + " )")
            self.LabelCans.configure(text="( " + str(-self.Cx) + ", " + str(-self.Cy) + " )")
        elif self.EntryNum.get() == "2":
            self.pointA(), self.pointB()
            self.LabelAans.configure(text="( " + str(-self.Ax) + ", " + str(-self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(-self.Bx) + ", " + str(-self.By) + " )")
        else:
            self.pointA()
            self.LabelAans.configure(text="( " + str(-self.Ax) + ", " + str(-self.Ay) + " )")

    def reflectInlineY(self):
        m = float(self.EntryM.get())
        c = float(self.EntryC.get())
        if self.EntryNum.get() == "4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            ansAx = ((self.Ax-self.Ax*m**2)+(2*m*self.Ay- 2*m*c) / (1+ m**2))
            ansAy = ((2*m*self.Ax)-(self.Ay-self.Ay*m**2)+2*c)/(1+ m**2)
            ansBx = ((self.Bx-self.Bx*m**2)+(2*m*self.By- 2*m*c) / (1+ m**2))
            ansBy = ((2*m*self.Bx)-(self.By-self.By*m**2)+2*c)/(1+ m**2)
            ansCx = ((self.Cx-self.Cx*m**2)+(2*m*self.Cy- 2*m*c) / (1+ m**2))
            ansCy = ((2*m*self.Cx)-(self.Cy-self.Cy*m**2)+2*c)/(1+ m**2)
            ansDx = ((self.Dx-self.Dx*m**2)+(2*m*self.Dy- 2*m*c) / (1+ m**2))
            ansDy = ((2*m*self.Dx)-(self.By-self.Dy*m**2)+2*c)/(1+ m**2)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(ansCy) + " )")
            self.LabelDans.configure(text="( " + str(ansDx) + ", " + str(ansDy) + " )")
        elif self.EntryNum.get() == "3":
            self.pointA(), self.pointB(), self.pointC()
            ansAx = ((self.Ax - self.Ax * m ** 2) + (2 * m * self.Ay - 2 * m * c) / (1 + m ** 2))
            ansAy = ((2 * m * self.Ax) - (self.Ay - self.Ay * m ** 2) + 2 * c) / (1 + m ** 2)
            ansBx = ((self.Bx - self.Bx * m ** 2) + (2 * m * self.By - 2 * m * c) / (1 + m ** 2))
            ansBy = ((2 * m * self.Bx) - (self.By - self.By * m ** 2) + 2 * c) / (1 + m ** 2)
            ansCx = ((self.Cx - self.Cx * m ** 2) + (2 * m * self.Cy - 2 * m * c) / (1 + m ** 2))
            ansCy = ((2 * m * self.Cx) - (self.Cy - self.Cy * m ** 2) + 2 * c) / (1 + m ** 2)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(ansCy) + " )")
        elif self.EntryNum.get() == "2":
            self.pointA(), self.pointB()
            ansAx = ((self.Ax - self.Ax * m ** 2) + (2 * m * self.Ay - 2 * m * c) / (1 + m ** 2))
            ansAy = ((2 * m * self.Ax) - (self.Ay - self.Ay * m ** 2) + 2 * c) / (1 + m ** 2)
            ansBx = ((self.Bx - self.Bx * m ** 2) + (2 * m * self.By - 2 * m * c) / (1 + m ** 2))
            ansBy = ((2 * m * self.Bx) - (self.By - self.By * m ** 2) + 2 * c) / (1 + m ** 2)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
        else:
            self.pointA()
            ansAx = ((self.Ax - self.Ax * m ** 2) + (2 * m * self.Ay - 2 * m * c) / (1 + m ** 2))
            ansAy = ((2 * m * self.Ax) - (self.Ay - self.Ay * m ** 2) + 2 * c) / (1 + m ** 2)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")

    def reflectInlineX(self):
        line_x = float(self.EntryX.get())
        if self.EntryNum.get() == "4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            ansAx = self.Ax -2*(self.Ax-line_x)
            ansBx = self.Bx -2*(self.Bx-line_x)
            ansCx = self.Cx -2*(self.Cx-line_x)
            ansDx = self.Dx -2*(self.Dx-line_x)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(self.Cy) + " )")
            self.LabelDans.configure(text="( " + str(ansDx) + ", " + str(self.Dy) + " )")
        elif self.EntryNum.get() == "3":
            self.pointA(), self.pointB(), self.pointC()
            ansAx = self.Ax - 2 * (self.Ax - line_x)
            ansBx = self.Bx - 2 * (self.Bx - line_x)
            ansCx = self.Cx - 2 * (self.Cx - line_x)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(self.Cy) + " )")
        elif self.EntryNum.get() == "2":
            self.pointA(), self.pointB()
            ansAx = self.Ax - 2 * (self.Ax - line_x)
            ansBx = self.Bx - 2 * (self.Bx - line_x)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
        else:
            self.pointA()
            ansAx = self.Ax - 2 * (self.Ax - line_x)
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")

    def scaling(self):
        scaleFactor = float(self.EntryFactor.get())
        scaleOriginX = float(self.EntryScaleOx.get())
        scaleOriginY = float(self.EntryScaleOy.get())
        if self.EntryNum.get() =="4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            ansAx = (self.Ax * scaleFactor) - scaleOriginX
            ansAy = (self.Ay * scaleFactor) - scaleOriginY
            ansBx = (self.Bx * scaleFactor) - scaleOriginX
            ansBy = (self.By * scaleFactor) - scaleOriginY
            ansCx = (self.Cx * scaleFactor) - scaleOriginX
            ansCy = (self.Cy * scaleFactor) - scaleOriginY
            ansDx = (self.Dx * scaleFactor) - scaleOriginX
            ansDy = (self.Dy * scaleFactor) - scaleOriginY
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(ansCy) + " )")
            self.LabelDans.configure(text="( " + str(ansDx) + ", " + str(ansDy) + " )")
        elif self.EntryNum.get() =="3":
            self.pointA(), self.pointB(), self.pointC()
            ansAx = (self.Ax * scaleFactor) - scaleOriginX
            ansAy = (self.Ay * scaleFactor) - scaleOriginY
            ansBx = (self.Bx * scaleFactor) - scaleOriginX
            ansBy = (self.By * scaleFactor) - scaleOriginY
            ansCx = (self.Cx * scaleFactor) - scaleOriginX
            ansCy = (self.Cy * scaleFactor) - scaleOriginY
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(ansCy) + " )")
        elif self.EntryNum.get() =="2":
            self.pointA(), self.pointB()
            ansAx = (self.Ax * scaleFactor) - scaleOriginX
            ansAy = (self.Ay * scaleFactor) - scaleOriginY
            ansBx = (self.Bx * scaleFactor) - scaleOriginX
            ansBy = (self.By * scaleFactor) - scaleOriginY
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(ansBy) + " )")
        else:
            self.pointA()
            ansAx = (self.Ax * scaleFactor) - scaleOriginX
            ansAy = (self.Ay * scaleFactor) - scaleOriginY
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(ansAy) + " )")

    def horizontalShear(self):
        shearFactor =float(self.EntryShearFactor.get())
        if self.EntryNum.get() == "4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            ansAx = self.Ax + shearFactor*self.Ay
            ansBx = self.Bx + shearFactor*self.By
            ansCx = self.Cx + shearFactor*self.Cy
            ansDx = self.Dx + shearFactor*self.Dy
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(self.Cy) + " )")
            self.LabelDans.configure(text="( " + str(ansDx) + ", " + str(self.Dy) + " )")
        elif self.EntryNum.get() == "3":
            self.pointA(), self.pointB(), self.pointC()
            ansAx = self.Ax + shearFactor * self.Ay
            ansBx = self.Bx + shearFactor * self.By
            ansCx = self.Cx + shearFactor * self.Cy
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
            self.LabelCans.configure(text="( " + str(ansCx) + ", " + str(self.Cy) + " )")
        elif self.EntryNum.get() == "2":
            self.pointA(), self.pointB()
            ansAx = self.Ax + shearFactor * self.Ay
            ansBx = self.Bx + shearFactor * self.By
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")
            self.LabelBans.configure(text="( " + str(ansBx) + ", " + str(self.By) + " )")
        else:
            self.pointA()
            ansAx = self.Ax + shearFactor * self.Ay
            self.LabelAans.configure(text="( " + str(ansAx) + ", " + str(self.Ay) + " )")

    def verticalShear(self):
        shearFactor = float(self.EntryShearFactor.get())
        if self.EntryNum.get() == "4":
            self.pointA(), self.pointB(), self.pointC(), self.pointD()
            ansAy = self.Ay + shearFactor*self.Ax
            ansBy = self.By + shearFactor*self.Bx
            ansCy = self.Cy + shearFactor*self.Cx
            ansDy = self.Dy + shearFactor*self.Dx
            self.LabelAans.configure(text="( " + str(self.Ax) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(self.Bx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(self.Cx) + ", " + str(ansCy) + " )")
            self.LabelDans.configure(text="( " + str(self.Dx) + ", " + str(ansDy) + " )")
        elif self.EntryNum.get() == "3":
            self.pointA(), self.pointB(), self.pointC()
            ansAy = self.Ay + shearFactor * self.Ax
            ansBy = self.By + shearFactor * self.Bx
            ansCy = self.Cy + shearFactor * self.Cx
            self.LabelAans.configure(text="( " + str(self.Ax) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(self.Bx) + ", " + str(ansBy) + " )")
            self.LabelCans.configure(text="( " + str(self.Cx) + ", " + str(ansCy) + " )")
        elif self.EntryNum.get() == "2":
            self.pointA(), self.pointB()
            ansAy = self.Ay + shearFactor * self.Ax
            ansBy = self.By + shearFactor * self.Bx
            self.LabelAans.configure(text="( " + str(self.Ax) + ", " + str(ansAy) + " )")
            self.LabelBans.configure(text="( " + str(self.Bx) + ", " + str(ansBy) + " )")
        else:
            self.pointA()
            ansAy = self.Ay + shearFactor*self.Ax
            self.LabelAans.configure(text="( " + str(self.Ax) + ", " + str(ansAy) + " )")

    def reset(self):
        if self.EntryNum.get() =="4":
            self.LabelA.destroy(), self.LabelP1.destroy(), self.EntryA_x.destroy(), self.EntryA_y.destroy(),
            self.LabelC1.destroy(), self.LabelP2.destroy(), self.LabelB.destroy(), self.LabelP3.destroy(),
            self.EntryB_x.destroy(),self.EntryB_y.destroy(), self.LabelC2.destroy(), self.LabelP4.destroy(),
            self.LabelC.destroy(), self.LabelP5.destroy(), self.LabelC3.destroy(), self.EntryC_x.destroy(),
            self.EntryC_y.destroy(), self.LabelP6.destroy(), self.LabelD.destroy(), self.LabelP7.destroy(),
            self.EntryD_x.destroy(), self.LabelC4.destroy(), self.EntryD_y.destroy(), self.LabelP8.destroy(),
            self.LabelAprime.destroy(), self.LabelAans.destroy(), self.LabelBprime.destroy(), self.LabelBans.destroy(),
            self.LabelCprime.destroy(), self.LabelCans.destroy(), self.LabelDprime.destroy(), self.LabelDans.destroy()
            self.EntryNum.delete(0, END)

        elif self.EntryNum.get() == "3":
            self.LabelA.destroy(), self.LabelP1.destroy(), self.EntryA_x.destroy(), self.EntryA_y.destroy(),
            self.LabelC1.destroy(), self.LabelP2.destroy(), self.LabelB.destroy(), self.LabelP3.destroy(),
            self.EntryB_x.destroy(), self.EntryB_y.destroy(), self.LabelC2.destroy(), self.LabelP4.destroy(),
            self.LabelC.destroy(), self.LabelP5.destroy(), self.LabelC3.destroy(), self.EntryC_x.destroy(),
            self.EntryC_y.destroy(), self.LabelP6.destroy(), self.LabelAprime.destroy(), self.LabelAans.destroy(), self.LabelBprime.destroy(), self.LabelBans.destroy(),
            self.LabelCprime.destroy(), self.LabelCans.destroy()
            self.EntryNum.delete(0, END)
        elif self.EntryNum.get() == "2":
            self.LabelA.destroy(), self.LabelP1.destroy(), self.EntryA_x.destroy(), self.EntryA_y.destroy(),
            self.LabelC1.destroy(), self.LabelP2.destroy(), self.LabelB.destroy(), self.LabelP3.destroy(),
            self.EntryB_x.destroy(), self.EntryB_y.destroy(), self.LabelC2.destroy(), self.LabelP4.destroy(),
            self.LabelAprime.destroy(), self.LabelAans.destroy(), self.LabelBprime.destroy(), self.LabelBans.destroy()
            self.EntryNum.delete(0, END)
        elif self.EntryNum.get() =="1":
            self.LabelA.destroy(), self.LabelP1.destroy(), self.EntryA_x.destroy(), self.EntryA_y.destroy(),
            self.LabelC1.destroy(), self.LabelP2.destroy(), self.LabelAprime.destroy(), self.LabelAans.destroy()
            self.EntryNum.delete(0, END)
        else:
            messagebox.showerror("reset failed", "nothing to reset!")



    def openBasicCal(self):
        root.destroy()
        Cal.vp_start_gui()

    def openVector(self):
        root.destroy()
        Vec.vp_start_gui()

    def to_2by2(self):
        root.destroy()
        mat2.vp_start_gui()

    def openVector3d(self):
        root.destroy()
        Vec3.vp_start_gui()

    def to_3by3(self):
        root.destroy()
        mat3.vp_start_gui()

    def to_4by4(self):
        root.destroy()
        mat4.vp_start_gui()

    def openAbout(self):
        ab.vp_start_gui()

    def btoMain(self):
        root.destroy()
        mm.vp_start_gui()

    def to_ct(self):
        root.destroy()
        ct.vp_start_gui()

    def to_r3d(self):
        root.destroy()
        r3d.vp_start_gui()

    def when_closing(self):
        if messagebox.askyesno('My Vector and Matrix Calculator', 'Do you really want to quit?'):
            sys.exit()
        else:
            pass









if __name__ == '__main__':
    vp_start_gui()



