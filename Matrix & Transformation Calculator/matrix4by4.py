#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 09, 2018 07:19:07 PM CST  platform: Windows NT

import sys
import numpy as np
from tkinter import messagebox
from winsound import*
import basicCalt as Cal
import Vector2 as Vec
import matrix2 as mat2
import matrix3by3 as mat3
import about as ab
import main_menu as mm
import  series_transform as st
import CompositeTransform as ct
import Vector3d as Vec3
import rotation_3d as r3d


try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    root.resizable(width=False, height=False)
    PlaySound(None, SND_PURGE)
    root.protocol("WM_DELETE_WINDOW", top.when_closing)
    root.iconbitmap("icon.ico")
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'
        font10 = "-family {Segoe UI} -size 12 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font12 = "-family {Courier New} -size 11 -weight normal -slant"  \
            " roman -underline 0 -overstrike 0"
        font13 = "-family {Segoe UI} -size 11 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font14 = "-family {Segoe UI} -size 15 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font15 = "-family {Courier New} -size 12 -weight normal -slant"  \
            " roman -underline 0 -overstrike 0"
        font9 = "-family {Segoe UI} -size 12 -weight bold -slant roman"  \
            " -underline 0 -overstrike 0"

        top.geometry("550x690+550+50")
        top.title("My Vector and Matrix Calculator")

        self.bg = Label(top)
        self.bg.place(relx=0.0, rely=0.0)
        self._bg = PhotoImage(file="binary.png")
        self.bg.configure(image=self._bg)

        self.menubar = Menu(top, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menubar)

        self.mode = Menu(top, tearoff=0)
        self.menubar.add_cascade(menu=self.mode,
                                 activebackground="#d9d9d9",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 font="TkMenuFont",
                                 foreground="#000000",
                                 label="Mode")
        self.mode.add_command(command=lambda: self.openBasicCal(),
                              activebackground="#d9d9d9",
                              activeforeground="#000000",
                              background="#d9d9d9",
                              font="TkMenuFont",
                              foreground="#000000",
                              label="Standard Calculator")
        self.allMatMenu = Menu(top, tearoff=0)
        self.mode.add_cascade(menu=self.allMatMenu,
                              activebackground="#d9d9d9",
                              activeforeground="#000000",
                              background="#d9d9d9",
                              font="TkMenuFont",
                              foreground="#000000",
                              label="Matrix Calculator")

        self.allMatMenu.add_command(command=lambda: self.to_2by2(),
                                    activebackground="#d9d9d9",
                                    activeforeground="#000000",
                                    background="#d9d9d9",
                                    font="TkMenuFont",
                                    foreground="#000000",
                                    label="Matrix 2x2")

        self.allMatMenu.add_command(command=lambda: self.to_3by3(),
            activebackground="#d9d9d9",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkMenuFont",
            foreground="#000000",
            label="Matrix 3x3")

        self.allMatMenu.add_command(
                                    activebackground="#d9d9d9",
                                    activeforeground="#000000",
                                    background="#d9d9d9",
                                    font="TkMenuFont",
                                    foreground="#000000",
                                    label="Matrix 4x4")

        self.allMatMenu.add_command(command=lambda: self.to_r3d(),
            activebackground="#d9d9d9",
            activeforeground="#000000",
            background="#d9d9d9",
            font="TkMenuFont",
            foreground="#000000",
            label="3D rotation")

        self.vector_menu = Menu(top, tearoff=0)
        self.mode.add_cascade(menu=self.vector_menu,
                              activebackground="#d9d9d9",
                              activeforeground="#000000",
                              background="#d9d9d9",
                              font="TkMenuFont",
                              foreground="#000000",
                              label="Vector Calculator")

        self.vector_menu.add_command(command=lambda: self.openVector(),
                                     activebackground="#d9d9d9",
                                     activeforeground="#000000",
                                     background="#d9d9d9",
                                     font="TkMenuFont",
                                     foreground="#000000",
                                     label="2D vector")

        self.vector_menu.add_command(command=lambda: self.openVector3d(),
                                     activebackground="#d9d9d9",
                                     activeforeground="#000000",
                                     background="#d9d9d9",
                                     font="TkMenuFont",
                                     foreground="#000000",
                                     label="3D vector")

        self.trans_menu = Menu(top, tearoff=0)
        self.mode.add_cascade(menu=self.trans_menu,
                              activebackground="#d9d9d9",
                              activeforeground="#000000",
                              background="#d9d9d9",
                              font="TkMenuFont",
                              foreground="#000000",
                              label="Transformation")

        self.trans_menu.add_command(command=lambda: self.to_st(),
                                    activebackground="#d9d9d9",
                                    activeforeground="#000000",
                                    background="#d9d9d9",
                                    font="TkMenuFont",
                                    foreground="#000000",
                                    label="series transformation")

        self.trans_menu.add_command(command=lambda: self.to_ct(),
                                    activebackground="#d9d9d9",
                                    activeforeground="#000000",
                                    background="#d9d9d9",
                                    font="TkMenuFont",
                                    foreground="#000000",
                                    label="composite transformation")

        self.menubar.add_command(command=lambda: self.openAbout(),
                                 activebackground="#d8d8d8",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 font="TkMenuFont",
                                 foreground="#000000",
                                 label="About")

        self.b2menu = Menu(top, tearoff=0)
        self.menubar.add_cascade(menu=self.b2menu,
                                 activebackground="#d9d9d9",
                                 activeforeground="#000000",
                                 background="#d9d9d9",
                                 font="TkMenuFont",
                                 foreground="#000000",
                                 label="Navigate")

        self.b2menu.add_command(command=lambda: self.btoMain(),
                                activebackground="#d9d9d9",
                                activeforeground="#000000",
                                background="#d9d9d9",
                                font="TkMenuFont",
                                foreground="#000000",
                                label="back to main menu")


        self.LabelframeA = LabelFrame(top)
        self.LabelframeA.place(relx=0.045, rely=0.014, relheight=0.348
                , relwidth=0.436)
        self.LabelframeA.configure(relief=GROOVE)
        self.LabelframeA.configure(font=font9)
        self.LabelframeA.configure(foreground="black")
        self.LabelframeA.configure(labelanchor="n")
        self.LabelframeA.configure(text='''Matrix A''')
        self.LabelframeA.configure(background="DarkOliveGreen1")
        self.LabelframeA.configure(highlightbackground="#d9d9d9")
        self.LabelframeA.configure(highlightcolor="black")
        self.LabelframeA.configure(width=220)

        self.EntryA1 = Entry(self.LabelframeA)
        self.EntryA1.place(relx=0.104, rely=0.125, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA1.configure(background="white")
        self.EntryA1.configure(disabledforeground="#a3a3a3")
        self.EntryA1.configure(font=font15)
        self.EntryA1.configure(foreground="#000000")
        self.EntryA1.configure(highlightbackground="#d9d9d9")
        self.EntryA1.configure(highlightcolor="black")
        self.EntryA1.configure(insertbackground="black")
        self.EntryA1.configure(justify=CENTER)
        self.EntryA1.configure(selectbackground="#c4c4c4")
        self.EntryA1.configure(selectforeground="black")

        self.EntryA2 = Entry(self.LabelframeA)
        self.EntryA2.place(relx=0.313, rely=0.125, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA2.configure(background="white")
        self.EntryA2.configure(disabledforeground="#a3a3a3")
        self.EntryA2.configure(font=font15)
        self.EntryA2.configure(foreground="#000000")
        self.EntryA2.configure(highlightbackground="#d9d9d9")
        self.EntryA2.configure(highlightcolor="black")
        self.EntryA2.configure(insertbackground="black")
        self.EntryA2.configure(justify=CENTER)
        self.EntryA2.configure(selectbackground="#c4c4c4")
        self.EntryA2.configure(selectforeground="black")

        self.EntryA3 = Entry(self.LabelframeA)
        self.EntryA3.place(relx=0.521, rely=0.125, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA3.configure(background="white")
        self.EntryA3.configure(disabledforeground="#a3a3a3")
        self.EntryA3.configure(font=font15)
        self.EntryA3.configure(foreground="#000000")
        self.EntryA3.configure(highlightbackground="#d9d9d9")
        self.EntryA3.configure(highlightcolor="black")
        self.EntryA3.configure(insertbackground="black")
        self.EntryA3.configure(justify=CENTER)
        self.EntryA3.configure(selectbackground="#c4c4c4")
        self.EntryA3.configure(selectforeground="black")
        self.EntryA3.configure(width=40)

        self.EntryA4 = Entry(self.LabelframeA)
        self.EntryA4.place(relx=0.729, rely=0.125, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA4.configure(background="white")
        self.EntryA4.configure(disabledforeground="#a3a3a3")
        self.EntryA4.configure(font=font15)
        self.EntryA4.configure(foreground="#000000")
        self.EntryA4.configure(highlightbackground="#d9d9d9")
        self.EntryA4.configure(highlightcolor="black")
        self.EntryA4.configure(insertbackground="black")
        self.EntryA4.configure(justify=CENTER)
        self.EntryA4.configure(selectbackground="#c4c4c4")
        self.EntryA4.configure(selectforeground="black")

        self.EntryA5 = Entry(self.LabelframeA)
        self.EntryA5.place(relx=0.104, rely=0.333, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA5.configure(background="white")
        self.EntryA5.configure(disabledforeground="#a3a3a3")
        self.EntryA5.configure(font=font15)
        self.EntryA5.configure(foreground="#000000")
        self.EntryA5.configure(highlightbackground="#d9d9d9")
        self.EntryA5.configure(highlightcolor="black")
        self.EntryA5.configure(insertbackground="black")
        self.EntryA5.configure(justify=CENTER)
        self.EntryA5.configure(selectbackground="#c4c4c4")
        self.EntryA5.configure(selectforeground="black")

        self.EntryA6 = Entry(self.LabelframeA)
        self.EntryA6.place(relx=0.313, rely=0.333, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA6.configure(background="white")
        self.EntryA6.configure(disabledforeground="#a3a3a3")
        self.EntryA6.configure(font=font15)
        self.EntryA6.configure(foreground="#000000")
        self.EntryA6.configure(highlightbackground="#d9d9d9")
        self.EntryA6.configure(highlightcolor="black")
        self.EntryA6.configure(insertbackground="black")
        self.EntryA6.configure(justify=CENTER)
        self.EntryA6.configure(selectbackground="#c4c4c4")
        self.EntryA6.configure(selectforeground="black")

        self.EntryA7 = Entry(self.LabelframeA)
        self.EntryA7.place(relx=0.521, rely=0.333, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA7.configure(background="white")
        self.EntryA7.configure(disabledforeground="#a3a3a3")
        self.EntryA7.configure(font=font15)
        self.EntryA7.configure(foreground="#000000")
        self.EntryA7.configure(highlightbackground="#d9d9d9")
        self.EntryA7.configure(highlightcolor="black")
        self.EntryA7.configure(insertbackground="black")
        self.EntryA7.configure(justify=CENTER)
        self.EntryA7.configure(selectbackground="#c4c4c4")
        self.EntryA7.configure(selectforeground="black")

        self.EntryA8 = Entry(self.LabelframeA)
        self.EntryA8.place(relx=0.729, rely=0.333, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA8.configure(background="white")
        self.EntryA8.configure(disabledforeground="#a3a3a3")
        self.EntryA8.configure(font=font15)
        self.EntryA8.configure(foreground="#000000")
        self.EntryA8.configure(highlightbackground="#d9d9d9")
        self.EntryA8.configure(highlightcolor="black")
        self.EntryA8.configure(insertbackground="black")
        self.EntryA8.configure(justify=CENTER)
        self.EntryA8.configure(selectbackground="#c4c4c4")
        self.EntryA8.configure(selectforeground="black")

        self.EntryA9 = Entry(self.LabelframeA)
        self.EntryA9.place(relx=0.104, rely=0.542, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA9.configure(background="white")
        self.EntryA9.configure(disabledforeground="#a3a3a3")
        self.EntryA9.configure(font=font15)
        self.EntryA9.configure(foreground="#000000")
        self.EntryA9.configure(highlightbackground="#d9d9d9")
        self.EntryA9.configure(highlightcolor="black")
        self.EntryA9.configure(insertbackground="black")
        self.EntryA9.configure(justify=CENTER)
        self.EntryA9.configure(selectbackground="#c4c4c4")
        self.EntryA9.configure(selectforeground="black")

        self.EntryA10 = Entry(self.LabelframeA)
        self.EntryA10.place(relx=0.313, rely=0.542, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA10.configure(background="white")
        self.EntryA10.configure(disabledforeground="#a3a3a3")
        self.EntryA10.configure(font=font15)
        self.EntryA10.configure(foreground="#000000")
        self.EntryA10.configure(highlightbackground="#d9d9d9")
        self.EntryA10.configure(highlightcolor="black")
        self.EntryA10.configure(insertbackground="black")
        self.EntryA10.configure(justify=CENTER)
        self.EntryA10.configure(selectbackground="#c4c4c4")
        self.EntryA10.configure(selectforeground="black")

        self.EntryA11 = Entry(self.LabelframeA)
        self.EntryA11.place(relx=0.521, rely=0.542, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA11.configure(background="white")
        self.EntryA11.configure(disabledforeground="#a3a3a3")
        self.EntryA11.configure(font=font15)
        self.EntryA11.configure(foreground="#000000")
        self.EntryA11.configure(highlightbackground="#d9d9d9")
        self.EntryA11.configure(highlightcolor="black")
        self.EntryA11.configure(insertbackground="black")
        self.EntryA11.configure(justify=CENTER)
        self.EntryA11.configure(selectbackground="#c4c4c4")
        self.EntryA11.configure(selectforeground="black")

        self.EntryA12 = Entry(self.LabelframeA)
        self.EntryA12.place(relx=0.729, rely=0.542, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA12.configure(background="white")
        self.EntryA12.configure(disabledforeground="#a3a3a3")
        self.EntryA12.configure(font=font15)
        self.EntryA12.configure(foreground="#000000")
        self.EntryA12.configure(highlightbackground="#d9d9d9")
        self.EntryA12.configure(highlightcolor="black")
        self.EntryA12.configure(insertbackground="black")
        self.EntryA12.configure(justify=CENTER)
        self.EntryA12.configure(selectbackground="#c4c4c4")
        self.EntryA12.configure(selectforeground="black")

        self.EntryA13 = Entry(self.LabelframeA)
        self.EntryA13.place(relx=0.104, rely=0.75, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA13.configure(background="white")
        self.EntryA13.configure(disabledforeground="#a3a3a3")
        self.EntryA13.configure(font=font15)
        self.EntryA13.configure(foreground="#000000")
        self.EntryA13.configure(highlightbackground="#d9d9d9")
        self.EntryA13.configure(highlightcolor="black")
        self.EntryA13.configure(insertbackground="black")
        self.EntryA13.configure(justify=CENTER)
        self.EntryA13.configure(selectbackground="#c4c4c4")
        self.EntryA13.configure(selectforeground="black")

        self.EntryA14 = Entry(self.LabelframeA)
        self.EntryA14.place(relx=0.313, rely=0.75, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA14.configure(background="white")
        self.EntryA14.configure(disabledforeground="#a3a3a3")
        self.EntryA14.configure(font=font15)
        self.EntryA14.configure(foreground="#000000")
        self.EntryA14.configure(highlightbackground="#d9d9d9")
        self.EntryA14.configure(highlightcolor="black")
        self.EntryA14.configure(insertbackground="black")
        self.EntryA14.configure(justify=CENTER)
        self.EntryA14.configure(selectbackground="#c4c4c4")
        self.EntryA14.configure(selectforeground="black")

        self.EntryA15 = Entry(self.LabelframeA)
        self.EntryA15.place(relx=0.521, rely=0.75, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA15.configure(background="white")
        self.EntryA15.configure(disabledforeground="#a3a3a3")
        self.EntryA15.configure(font=font15)
        self.EntryA15.configure(foreground="#000000")
        self.EntryA15.configure(highlightbackground="#d9d9d9")
        self.EntryA15.configure(highlightcolor="black")
        self.EntryA15.configure(insertbackground="black")
        self.EntryA15.configure(justify=CENTER)
        self.EntryA15.configure(selectbackground="#c4c4c4")
        self.EntryA15.configure(selectforeground="black")

        self.EntryA16 = Entry(self.LabelframeA)
        self.EntryA16.place(relx=0.729, rely=0.75, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryA16.configure(background="white")
        self.EntryA16.configure(disabledforeground="#a3a3a3")
        self.EntryA16.configure(font=font15)
        self.EntryA16.configure(foreground="#000000")
        self.EntryA16.configure(highlightbackground="#d9d9d9")
        self.EntryA16.configure(highlightcolor="black")
        self.EntryA16.configure(insertbackground="black")
        self.EntryA16.configure(justify=CENTER)
        self.EntryA16.configure(selectbackground="#c4c4c4")
        self.EntryA16.configure(selectforeground="black")

        self.LabelframeB = LabelFrame(top)
        self.LabelframeB.place(relx=0.518, rely=0.014, relheight=0.348
                , relwidth=0.436)
        self.LabelframeB.configure(relief=GROOVE)
        self.LabelframeB.configure(font=font9)
        self.LabelframeB.configure(foreground="black")
        self.LabelframeB.configure(labelanchor="n")
        self.LabelframeB.configure(text='''Matrix B''')
        self.LabelframeB.configure(background="DarkOliveGreen1")
        self.LabelframeB.configure(highlightbackground="#d9d9d9")
        self.LabelframeB.configure(highlightcolor="black")
        self.LabelframeB.configure(width=220)

        self.EntryB1 = Entry(self.LabelframeB)
        self.EntryB1.place(relx=0.104, rely=0.125, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB1.configure(background="white")
        self.EntryB1.configure(disabledforeground="#a3a3a3")
        self.EntryB1.configure(font=font15)
        self.EntryB1.configure(foreground="#000000")
        self.EntryB1.configure(highlightbackground="#d9d9d9")
        self.EntryB1.configure(highlightcolor="black")
        self.EntryB1.configure(insertbackground="black")
        self.EntryB1.configure(justify=CENTER)
        self.EntryB1.configure(selectbackground="#c4c4c4")
        self.EntryB1.configure(selectforeground="black")

        self.EntryB2 = Entry(self.LabelframeB)
        self.EntryB2.place(relx=0.313, rely=0.125, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB2.configure(background="white")
        self.EntryB2.configure(disabledforeground="#a3a3a3")
        self.EntryB2.configure(font=font15)
        self.EntryB2.configure(foreground="#000000")
        self.EntryB2.configure(highlightbackground="#d9d9d9")
        self.EntryB2.configure(highlightcolor="black")
        self.EntryB2.configure(insertbackground="black")
        self.EntryB2.configure(justify=CENTER)
        self.EntryB2.configure(selectbackground="#c4c4c4")
        self.EntryB2.configure(selectforeground="black")

        self.EntryB3 = Entry(self.LabelframeB)
        self.EntryB3.place(relx=0.521, rely=0.125, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB3.configure(background="white")
        self.EntryB3.configure(disabledforeground="#a3a3a3")
        self.EntryB3.configure(font=font15)
        self.EntryB3.configure(foreground="#000000")
        self.EntryB3.configure(highlightbackground="#d9d9d9")
        self.EntryB3.configure(highlightcolor="black")
        self.EntryB3.configure(insertbackground="black")
        self.EntryB3.configure(justify=CENTER)
        self.EntryB3.configure(selectbackground="#c4c4c4")
        self.EntryB3.configure(selectforeground="black")

        self.EntryB4 = Entry(self.LabelframeB)
        self.EntryB4.place(relx=0.729, rely=0.125, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB4.configure(background="white")
        self.EntryB4.configure(disabledforeground="#a3a3a3")
        self.EntryB4.configure(font=font15)
        self.EntryB4.configure(foreground="#000000")
        self.EntryB4.configure(highlightbackground="#d9d9d9")
        self.EntryB4.configure(highlightcolor="black")
        self.EntryB4.configure(insertbackground="black")
        self.EntryB4.configure(justify=CENTER)
        self.EntryB4.configure(selectbackground="#c4c4c4")
        self.EntryB4.configure(selectforeground="black")

        self.EntryB5 = Entry(self.LabelframeB)
        self.EntryB5.place(relx=0.104, rely=0.333, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB5.configure(background="white")
        self.EntryB5.configure(disabledforeground="#a3a3a3")
        self.EntryB5.configure(font=font15)
        self.EntryB5.configure(foreground="#000000")
        self.EntryB5.configure(highlightbackground="#d9d9d9")
        self.EntryB5.configure(highlightcolor="black")
        self.EntryB5.configure(insertbackground="black")
        self.EntryB5.configure(justify=CENTER)
        self.EntryB5.configure(selectbackground="#c4c4c4")
        self.EntryB5.configure(selectforeground="black")

        self.EntryB6 = Entry(self.LabelframeB)
        self.EntryB6.place(relx=0.313, rely=0.333, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB6.configure(background="white")
        self.EntryB6.configure(disabledforeground="#a3a3a3")
        self.EntryB6.configure(font=font15)
        self.EntryB6.configure(foreground="#000000")
        self.EntryB6.configure(highlightbackground="#d9d9d9")
        self.EntryB6.configure(highlightcolor="black")
        self.EntryB6.configure(insertbackground="black")
        self.EntryB6.configure(justify=CENTER)
        self.EntryB6.configure(selectbackground="#c4c4c4")
        self.EntryB6.configure(selectforeground="black")

        self.EntryB7 = Entry(self.LabelframeB)
        self.EntryB7.place(relx=0.521, rely=0.333, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB7.configure(background="white")
        self.EntryB7.configure(disabledforeground="#a3a3a3")
        self.EntryB7.configure(font=font15)
        self.EntryB7.configure(foreground="#000000")
        self.EntryB7.configure(highlightbackground="#d9d9d9")
        self.EntryB7.configure(highlightcolor="black")
        self.EntryB7.configure(insertbackground="black")
        self.EntryB7.configure(justify=CENTER)
        self.EntryB7.configure(selectbackground="#c4c4c4")
        self.EntryB7.configure(selectforeground="black")

        self.EntryB8 = Entry(self.LabelframeB)
        self.EntryB8.place(relx=0.729, rely=0.333, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB8.configure(background="white")
        self.EntryB8.configure(disabledforeground="#a3a3a3")
        self.EntryB8.configure(font=font15)
        self.EntryB8.configure(foreground="#000000")
        self.EntryB8.configure(highlightbackground="#d9d9d9")
        self.EntryB8.configure(highlightcolor="black")
        self.EntryB8.configure(insertbackground="black")
        self.EntryB8.configure(justify=CENTER)
        self.EntryB8.configure(selectbackground="#c4c4c4")
        self.EntryB8.configure(selectforeground="black")

        self.EntryB9 = Entry(self.LabelframeB)
        self.EntryB9.place(relx=0.104, rely=0.542, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB9.configure(background="white")
        self.EntryB9.configure(disabledforeground="#a3a3a3")
        self.EntryB9.configure(font=font15)
        self.EntryB9.configure(foreground="#000000")
        self.EntryB9.configure(highlightbackground="#d9d9d9")
        self.EntryB9.configure(highlightcolor="black")
        self.EntryB9.configure(insertbackground="black")
        self.EntryB9.configure(justify=CENTER)
        self.EntryB9.configure(selectbackground="#c4c4c4")
        self.EntryB9.configure(selectforeground="black")

        self.EntryB10 = Entry(self.LabelframeB)
        self.EntryB10.place(relx=0.313, rely=0.542, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB10.configure(background="white")
        self.EntryB10.configure(disabledforeground="#a3a3a3")
        self.EntryB10.configure(font=font15)
        self.EntryB10.configure(foreground="#000000")
        self.EntryB10.configure(highlightbackground="#d9d9d9")
        self.EntryB10.configure(highlightcolor="black")
        self.EntryB10.configure(insertbackground="black")
        self.EntryB10.configure(justify=CENTER)
        self.EntryB10.configure(selectbackground="#c4c4c4")
        self.EntryB10.configure(selectforeground="black")

        self.EntryB11 = Entry(self.LabelframeB)
        self.EntryB11.place(relx=0.521, rely=0.542, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB11.configure(background="white")
        self.EntryB11.configure(disabledforeground="#a3a3a3")
        self.EntryB11.configure(font=font15)
        self.EntryB11.configure(foreground="#000000")
        self.EntryB11.configure(highlightbackground="#d9d9d9")
        self.EntryB11.configure(highlightcolor="black")
        self.EntryB11.configure(insertbackground="black")
        self.EntryB11.configure(justify=CENTER)
        self.EntryB11.configure(selectbackground="#c4c4c4")
        self.EntryB11.configure(selectforeground="black")

        self.EntryB12 = Entry(self.LabelframeB)
        self.EntryB12.place(relx=0.729, rely=0.542, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB12.configure(background="white")
        self.EntryB12.configure(disabledforeground="#a3a3a3")
        self.EntryB12.configure(font=font15)
        self.EntryB12.configure(foreground="#000000")
        self.EntryB12.configure(highlightbackground="#d9d9d9")
        self.EntryB12.configure(highlightcolor="black")
        self.EntryB12.configure(insertbackground="black")
        self.EntryB12.configure(justify=CENTER)
        self.EntryB12.configure(selectbackground="#c4c4c4")
        self.EntryB12.configure(selectforeground="black")

        self.EntryB13 = Entry(self.LabelframeB)
        self.EntryB13.place(relx=0.104, rely=0.75, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB13.configure(background="white")
        self.EntryB13.configure(disabledforeground="#a3a3a3")
        self.EntryB13.configure(font=font15)
        self.EntryB13.configure(foreground="#000000")
        self.EntryB13.configure(highlightbackground="#d9d9d9")
        self.EntryB13.configure(highlightcolor="black")
        self.EntryB13.configure(insertbackground="black")
        self.EntryB13.configure(justify=CENTER)
        self.EntryB13.configure(selectbackground="#c4c4c4")
        self.EntryB13.configure(selectforeground="black")

        self.EntryB14 = Entry(self.LabelframeB)
        self.EntryB14.place(relx=0.313, rely=0.75, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB14.configure(background="white")
        self.EntryB14.configure(disabledforeground="#a3a3a3")
        self.EntryB14.configure(font=font15)
        self.EntryB14.configure(foreground="#000000")
        self.EntryB14.configure(highlightbackground="#d9d9d9")
        self.EntryB14.configure(highlightcolor="black")
        self.EntryB14.configure(insertbackground="black")
        self.EntryB14.configure(justify=CENTER)
        self.EntryB14.configure(selectbackground="#c4c4c4")
        self.EntryB14.configure(selectforeground="black")

        self.EntryB15 = Entry(self.LabelframeB)
        self.EntryB15.place(relx=0.521, rely=0.75, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB15.configure(background="white")
        self.EntryB15.configure(disabledforeground="#a3a3a3")
        self.EntryB15.configure(font=font15)
        self.EntryB15.configure(foreground="#000000")
        self.EntryB15.configure(highlightbackground="#d9d9d9")
        self.EntryB15.configure(highlightcolor="black")
        self.EntryB15.configure(insertbackground="black")
        self.EntryB15.configure(justify=CENTER)
        self.EntryB15.configure(selectbackground="#c4c4c4")
        self.EntryB15.configure(selectforeground="black")

        self.EntryB16 = Entry(self.LabelframeB)
        self.EntryB16.place(relx=0.729, rely=0.75, height=40, relwidth=0.167
                , bordermode='ignore')
        self.EntryB16.configure(background="white")
        self.EntryB16.configure(disabledforeground="#a3a3a3")
        self.EntryB16.configure(font=font15)
        self.EntryB16.configure(foreground="#000000")
        self.EntryB16.configure(highlightbackground="#d9d9d9")
        self.EntryB16.configure(highlightcolor="black")
        self.EntryB16.configure(insertbackground="black")
        self.EntryB16.configure(justify=CENTER)
        self.EntryB16.configure(selectbackground="#c4c4c4")
        self.EntryB16.configure(selectforeground="black")

        self.LabelframeOp = LabelFrame(top)
        self.LabelframeOp.place(relx=0.045, rely=0.377, relheight=0.601
                , relwidth=0.909)
        self.LabelframeOp.configure(relief=GROOVE)
        self.LabelframeOp.configure(font=font10)
        self.LabelframeOp.configure(foreground="black")
        self.LabelframeOp.configure(labelanchor="n")
        self.LabelframeOp.configure(text='''Choose one operation''')
        self.LabelframeOp.configure(background="khaki1")
        self.LabelframeOp.configure(highlightbackground="#d9d9d9")
        self.LabelframeOp.configure(highlightcolor="black")
        self.LabelframeOp.configure(width=500)

        self.v = IntVar()
        self.v.set(1)

        self.RadiobuttonAdd = Radiobutton(self.LabelframeOp)
        self.RadiobuttonAdd.place(relx=0.04, rely=0.145, relheight=0.084
                , relwidth=0.16, bordermode='ignore')
        self.RadiobuttonAdd.configure(activebackground="#d9d9d9")
        self.RadiobuttonAdd.configure(activeforeground="#000000")
        self.RadiobuttonAdd.configure(anchor=W)
        self.RadiobuttonAdd.configure(background="khaki1")
        self.RadiobuttonAdd.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonAdd.configure(font=font10)
        self.RadiobuttonAdd.configure(foreground="#000000")
        self.RadiobuttonAdd.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonAdd.configure(highlightcolor="black")
        self.RadiobuttonAdd.configure(text='''A+B''')
        self.RadiobuttonAdd.configure(variable = self.v , value =1)

        self.RadiobuttonSub1 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonSub1.place(relx=0.04, rely=0.313, relheight=0.084
                , relwidth=0.2, bordermode='ignore')
        self.RadiobuttonSub1.configure(activebackground="#d9d9d9")
        self.RadiobuttonSub1.configure(activeforeground="#000000")
        self.RadiobuttonSub1.configure(anchor=W)
        self.RadiobuttonSub1.configure(background="khaki1")
        self.RadiobuttonSub1.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonSub1.configure(font=font10)
        self.RadiobuttonSub1.configure(foreground="#000000")
        self.RadiobuttonSub1.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonSub1.configure(highlightcolor="black")
        self.RadiobuttonSub1.configure(text='''A-B''')
        self.RadiobuttonSub1.configure(variable=self.v, value=2)

        self.RadiobuttonSub2 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonSub2.place(relx=0.04, rely=0.41, relheight=0.084
                , relwidth=0.2, bordermode='ignore')
        self.RadiobuttonSub2.configure(activebackground="#d9d9d9")
        self.RadiobuttonSub2.configure(activeforeground="#000000")
        self.RadiobuttonSub2.configure(anchor=W)
        self.RadiobuttonSub2.configure(background="khaki1")
        self.RadiobuttonSub2.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonSub2.configure(font=font10)
        self.RadiobuttonSub2.configure(foreground="#000000")
        self.RadiobuttonSub2.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonSub2.configure(highlightcolor="black")
        self.RadiobuttonSub2.configure(text='''B-A''')
        self.RadiobuttonSub2.configure(variable=self.v, value=3)

        self.RadiobuttonMul1 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonMul1.place(relx=0.04, rely=0.578, relheight=0.084
                , relwidth=0.14, bordermode='ignore')
        self.RadiobuttonMul1.configure(activebackground="#d9d9d9")
        self.RadiobuttonMul1.configure(activeforeground="#000000")
        self.RadiobuttonMul1.configure(anchor=W)
        self.RadiobuttonMul1.configure(background="khaki1")
        self.RadiobuttonMul1.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonMul1.configure(font=font10)
        self.RadiobuttonMul1.configure(foreground="#000000")
        self.RadiobuttonMul1.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonMul1.configure(highlightcolor="black")
        self.RadiobuttonMul1.configure(text='''AxB''')
        self.RadiobuttonMul1.configure(variable=self.v, value=4)

        self.RadiobuttonMul2 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonMul2.place(relx=0.04, rely=0.675, relheight=0.084
                , relwidth=0.14, bordermode='ignore')
        self.RadiobuttonMul2.configure(activebackground="#d9d9d9")
        self.RadiobuttonMul2.configure(activeforeground="#000000")
        self.RadiobuttonMul2.configure(anchor=W)
        self.RadiobuttonMul2.configure(background="khaki1")
        self.RadiobuttonMul2.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonMul2.configure(font=font10)
        self.RadiobuttonMul2.configure(foreground="#000000")
        self.RadiobuttonMul2.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonMul2.configure(highlightcolor="black")
        self.RadiobuttonMul2.configure(text='''BxA''')
        self.RadiobuttonMul2.configure(variable=self.v, value=5)

        self.RadiobuttonDet1 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonDet1.place(relx=0.3, rely=0.12, relheight=0.084
                , relwidth=0.16, bordermode='ignore')
        self.RadiobuttonDet1.configure(activebackground="#d9d9d9")
        self.RadiobuttonDet1.configure(activeforeground="#000000")
        self.RadiobuttonDet1.configure(anchor=W)
        self.RadiobuttonDet1.configure(background="khaki1")
        self.RadiobuttonDet1.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonDet1.configure(font=font10)
        self.RadiobuttonDet1.configure(foreground="#000000")
        self.RadiobuttonDet1.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonDet1.configure(highlightcolor="black")
        self.RadiobuttonDet1.configure(text='''det A''')
        self.RadiobuttonDet1.configure(variable=self.v, value=6)

        self.RadiobuttonDet2 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonDet2.place(relx=0.3, rely=0.193, relheight=0.084
                , relwidth=0.16, bordermode='ignore')
        self.RadiobuttonDet2.configure(activebackground="#d9d9d9")
        self.RadiobuttonDet2.configure(activeforeground="#000000")
        self.RadiobuttonDet2.configure(anchor=W)
        self.RadiobuttonDet2.configure(background="khaki1")
        self.RadiobuttonDet2.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonDet2.configure(font=font10)
        self.RadiobuttonDet2.configure(foreground="#000000")
        self.RadiobuttonDet2.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonDet2.configure(highlightcolor="black")
        self.RadiobuttonDet2.configure(text='''det B''')
        self.RadiobuttonDet2.configure(variable=self.v, value=7)

        self.RadiobuttonInv1 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonInv1.place(relx=0.3, rely=0.361, relheight=0.084
                , relwidth=0.22, bordermode='ignore')
        self.RadiobuttonInv1.configure(activebackground="#d9d9d9")
        self.RadiobuttonInv1.configure(activeforeground="#000000")
        self.RadiobuttonInv1.configure(anchor=W)
        self.RadiobuttonInv1.configure(background="khaki1")
        self.RadiobuttonInv1.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonInv1.configure(font=font10)
        self.RadiobuttonInv1.configure(foreground="#000000")
        self.RadiobuttonInv1.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonInv1.configure(highlightcolor="black")
        self.RadiobuttonInv1.configure(text='''inverse A''')
        self.RadiobuttonInv1.configure(variable=self.v, value=8)

        self.RadiobuttonInv2 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonInv2.place(relx=0.3, rely=0.434, relheight=0.084
                , relwidth=0.22, bordermode='ignore')
        self.RadiobuttonInv2.configure(activebackground="#d9d9d9")
        self.RadiobuttonInv2.configure(activeforeground="#000000")
        self.RadiobuttonInv2.configure(anchor=W)
        self.RadiobuttonInv2.configure(background="khaki1")
        self.RadiobuttonInv2.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonInv2.configure(font=font10)
        self.RadiobuttonInv2.configure(foreground="#000000")
        self.RadiobuttonInv2.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonInv2.configure(highlightcolor="black")
        self.RadiobuttonInv2.configure(text='''inverse B''')
        self.RadiobuttonInv2.configure(variable=self.v, value=9)

        self.RadiobuttonK1 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonK1.place(relx=0.3, rely=0.675, relheight=0.084
                                 , relwidth=0.14, bordermode='ignore')
        self.RadiobuttonK1.configure(activebackground="#d9d9d9")
        self.RadiobuttonK1.configure(activeforeground="#000000")
        self.RadiobuttonK1.configure(background="khaki1")
        self.RadiobuttonK1.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonK1.configure(font=font10)
        self.RadiobuttonK1.configure(foreground="#000000")
        self.RadiobuttonK1.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonK1.configure(highlightcolor="black")
        self.RadiobuttonK1.configure(text='''kxA''')
        self.RadiobuttonK1.configure(variable=self.v, value=10)

        self.RadiobuttonK2 = Radiobutton(self.LabelframeOp)
        self.RadiobuttonK2.place(relx=0.3, rely=0.747, relheight=0.084
                , relwidth=0.14, bordermode='ignore')
        self.RadiobuttonK2.configure(activebackground="#d9d9d9")
        self.RadiobuttonK2.configure(activeforeground="#000000")
        self.RadiobuttonK2.configure(background="khaki1")
        self.RadiobuttonK2.configure(disabledforeground="#a3a3a3")
        self.RadiobuttonK2.configure(font=font10)
        self.RadiobuttonK2.configure(foreground="#000000")
        self.RadiobuttonK2.configure(highlightbackground="#d9d9d9")
        self.RadiobuttonK2.configure(highlightcolor="black")
        self.RadiobuttonK2.configure(text='''kxB''')
        self.RadiobuttonK2.configure(variable=self.v, value=11)

        self.LabelAdd = Label(self.LabelframeOp)
        self.LabelAdd.place(relx=0.02, rely=0.072, height=30, width=100
                , bordermode='ignore')
        self.LabelAdd.configure(activebackground="#f9f9f9")
        self.LabelAdd.configure(activeforeground="black")
        self.LabelAdd.configure(background="khaki1")
        self.LabelAdd.configure(disabledforeground="#a3a3a3")
        self.LabelAdd.configure(font=font9)
        self.LabelAdd.configure(foreground="#000000")
        self.LabelAdd.configure(highlightbackground="#d9d9d9")
        self.LabelAdd.configure(highlightcolor="black")
        self.LabelAdd.configure(text='''add''')

        self.LabelSub = Label(self.LabelframeOp)
        self.LabelSub.place(relx=0.04, rely=0.265, height=30, width=100
                , bordermode='ignore')
        self.LabelSub.configure(activebackground="#f9f9f9")
        self.LabelSub.configure(activeforeground="black")
        self.LabelSub.configure(background="khaki1")
        self.LabelSub.configure(disabledforeground="#a3a3a3")
        self.LabelSub.configure(font=font9)
        self.LabelSub.configure(foreground="#000000")
        self.LabelSub.configure(highlightbackground="#d9d9d9")
        self.LabelSub.configure(highlightcolor="black")
        self.LabelSub.configure(text='''subtract''')

        self.LabelDet = Label(self.LabelframeOp)
        self.LabelDet.place(relx=0.28, rely=0.072, height=30, width=130
                , bordermode='ignore')
        self.LabelDet.configure(activebackground="#f9f9f9")
        self.LabelDet.configure(activeforeground="black")
        self.LabelDet.configure(background="khaki1")
        self.LabelDet.configure(disabledforeground="#a3a3a3")
        self.LabelDet.configure(font=font9)
        self.LabelDet.configure(foreground="#000000")
        self.LabelDet.configure(highlightbackground="#d9d9d9")
        self.LabelDet.configure(highlightcolor="black")
        self.LabelDet.configure(text='''determinant''')

        self.LabelInv = Label(self.LabelframeOp)
        self.LabelInv.place(relx=0.28, rely=0.289, height=30, width=100
                , bordermode='ignore')
        self.LabelInv.configure(activebackground="#f9f9f9")
        self.LabelInv.configure(activeforeground="black")
        self.LabelInv.configure(background="khaki1")
        self.LabelInv.configure(disabledforeground="#a3a3a3")
        self.LabelInv.configure(font=font9)
        self.LabelInv.configure(foreground="#000000")
        self.LabelInv.configure(highlightbackground="#d9d9d9")
        self.LabelInv.configure(highlightcolor="black")
        self.LabelInv.configure(text='''inverse''')

        self.LabelMul = Label(self.LabelframeOp)
        self.LabelMul.place(relx=0.04, rely=0.53, height=30, width=100
                , bordermode='ignore')
        self.LabelMul.configure(activebackground="#f9f9f9")
        self.LabelMul.configure(activeforeground="black")
        self.LabelMul.configure(background="khaki1")
        self.LabelMul.configure(disabledforeground="#a3a3a3")
        self.LabelMul.configure(font=font9)
        self.LabelMul.configure(foreground="#000000")
        self.LabelMul.configure(highlightbackground="#d9d9d9")
        self.LabelMul.configure(highlightcolor="black")
        self.LabelMul.configure(text='''multiply''')

        self.LabelScale = Label(self.LabelframeOp)
        self.LabelScale.place(relx=0.28, rely=0.53, height=30, width=100
                , bordermode='ignore')
        self.LabelScale.configure(activebackground="#f9f9f9")
        self.LabelScale.configure(activeforeground="black")
        self.LabelScale.configure(background="khaki1")
        self.LabelScale.configure(disabledforeground="#a3a3a3")
        self.LabelScale.configure(font=font9)
        self.LabelScale.configure(foreground="#000000")
        self.LabelScale.configure(highlightbackground="#d9d9d9")
        self.LabelScale.configure(highlightcolor="black")
        self.LabelScale.configure(text='''scaling''')

        self.Labelk = Label(self.LabelframeOp)
        self.Labelk.place(relx=0.26, rely=0.627, height=26, width=83
                , bordermode='ignore')
        self.Labelk.configure(activebackground="#f9f9f9")
        self.Labelk.configure(activeforeground="black")
        self.Labelk.configure(background="khaki1")
        self.Labelk.configure(disabledforeground="#a3a3a3")
        self.Labelk.configure(font=font12)
        self.Labelk.configure(foreground="#000000")
        self.Labelk.configure(highlightbackground="#d9d9d9")
        self.Labelk.configure(highlightcolor="black")
        self.Labelk.configure(text='''scale,k''')

        self.EntryK = Entry(self.LabelframeOp)
        self.EntryK.place(relx=0.44, rely=0.602, height=40, relwidth=0.08
                , bordermode='ignore')
        self.EntryK.configure(background="white")
        self.EntryK.configure(disabledforeground="#a3a3a3")
        self.EntryK.configure(font=font15)
        self.EntryK.configure(foreground="#000000")
        self.EntryK.configure(highlightbackground="#d9d9d9")
        self.EntryK.configure(highlightcolor="black")
        self.EntryK.configure(insertbackground="black")
        self.EntryK.configure(justify=CENTER)
        self.EntryK.configure(selectbackground="#c4c4c4")
        self.EntryK.configure(selectforeground="black")

        self.ButtonResult = Button(self.LabelframeOp)
        self.ButtonResult.place(relx=0.08, rely=0.855, height=48, width=194
                , bordermode='ignore')
        self.ButtonResult.configure(activebackground="#d9d9d9")
        self.ButtonResult.configure(activeforeground="#000000")
        self.ButtonResult.configure(background="#d9d9d9")
        self.ButtonResult.configure(borderwidth="5")
        self.ButtonResult.configure(disabledforeground="#a3a3a3")
        self.ButtonResult.configure(font=font13)
        self.ButtonResult.configure(foreground="#000000")
        self.ButtonResult.configure(highlightbackground="#d9d9d9")
        self.ButtonResult.configure(highlightcolor="black")
        self.ButtonResult.configure(pady="0")
        self.ButtonResult.configure(text='''click here to see result''')
        self.ButtonResult.configure(command = lambda : self.operation())

        self.LabelResult = Label(self.LabelframeOp)
        self.LabelResult.place(relx=0.58, rely=0.265, height=180, width=190
                , bordermode='ignore')
        self.LabelResult.configure(activebackground="#f9f9f9")
        self.LabelResult.configure(activeforeground="black")
        self.LabelResult.configure(background="white")
        self.LabelResult.configure(disabledforeground="#a3a3a3")
        self.LabelResult.configure(font=font13)
        self.LabelResult.configure(foreground="#000000")
        self.LabelResult.configure(highlightbackground="#d9d9d9")
        self.LabelResult.configure(highlightcolor="black")

        self.ButtonClear = Button(self.LabelframeOp)
        self.ButtonClear.place(relx=0.68, rely=0.867, height=37, width=68
                           , bordermode='ignore')
        self.ButtonClear.configure(activebackground="#d9d9d9")
        self.ButtonClear.configure(activeforeground="#000000")
        self.ButtonClear.configure(background="#d9d9d9")
        self.ButtonClear.configure(borderwidth="4")
        self.ButtonClear.configure(disabledforeground="#a3a3a3")
        self.ButtonClear.configure(foreground="#000000")
        self.ButtonClear.configure(highlightbackground="#d9d9d9")
        self.ButtonClear.configure(highlightcolor="black")
        self.ButtonClear.configure(pady="0")
        self.ButtonClear.configure(text='''clear all''')
        self.ButtonClear.configure(command = lambda : self.clearALL())

    def matrixA(self):
        self.A = np.array([[None, None, None, None], [None, None, None, None], [None, None, None, None], [None, None, None, None]])
        if len(self.EntryA1.get() or self.EntryA2.get() or self.EntryA3.get() or self.EntryA4.get() or self.EntryA5.get() or self.EntryA6.get() or self.EntryA7.get() or self.EntryA8.get() or self.EntryA9.get() or self.EntryA10.get() or self.EntryA11.get() or self.EntryA12.get() or self.EntryA13.get() or self.EntryA14.get() or self.EntryA15.get() or self.EntryA16.get())==0:
            self.LabelResult.configure(text = "fill matrix A completely")
        else:
            self.A[0, 0] = float(self.EntryA1.get())
            self.A[0, 1] = float(self.EntryA2.get())
            self.A[0, 2] = float(self.EntryA3.get())
            self.A[0, 3] = float(self.EntryA4.get())
            self.A[1, 0] = float(self.EntryA5.get())
            self.A[1, 1] = float(self.EntryA6.get())
            self.A[1, 2] = float(self.EntryA7.get())
            self.A[1, 3] = float(self.EntryA8.get())
            self.A[2, 0] = float(self.EntryA9.get())
            self.A[2, 1] = float(self.EntryA10.get())
            self.A[2, 2] = float(self.EntryA11.get())
            self.A[2, 3] = float(self.EntryA12.get())
            self.A[3, 0] = float(self.EntryA13.get())
            self.A[3, 1] = float(self.EntryA14.get())
            self.A[3, 2] = float(self.EntryA15.get())
            self.A[3, 3] = float(self.EntryA16.get())

    def matrixB(self):
        self.B = np.array(
            [[None, None, None, None], [None, None, None, None], [None, None, None, None], [None, None, None, None]])
        if len(self.EntryB1.get() or self.EntryB2.get() or self.EntryB3.get() or self.EntryB4.get() or self.EntryB5.get() or self.EntryB6.get() or self.EntryB7.get() or self.EntryB8.get() or self.EntryB9.get() or self.EntryB10.get() or self.EntryB11.get() or self.EntryB12.get() or self.EntryB13.get() or self.EntryB14.get() or self.EntryA15.get() or self.EntryB16.get())==0:
            self.LabelResult.configure(text="fill matrix B completely")
        else:
            self.B[0, 0] = float(self.EntryB1.get())
            self.B[0, 1] = float(self.EntryB2.get())
            self.B[0, 2] = float(self.EntryB3.get())
            self.B[0, 3] = float(self.EntryB4.get())
            self.B[1, 0] = float(self.EntryB5.get())
            self.B[1, 1] = float(self.EntryB6.get())
            self.B[1, 2] = float(self.EntryB7.get())
            self.B[1, 3] = float(self.EntryB8.get())
            self.B[2, 0] = float(self.EntryB9.get())
            self.B[2, 1] = float(self.EntryB10.get())
            self.B[2, 2] = float(self.EntryB11.get())
            self.B[2, 3] = float(self.EntryB12.get())
            self.B[3, 0] = float(self.EntryB13.get())
            self.B[3, 1] = float(self.EntryB14.get())
            self.B[3, 2] = float(self.EntryB15.get())
            self.B[3, 3] = float(self.EntryB16.get())

    def operation(self):
        self.matrixA(), self.matrixB()
        if self.v.get()==1:
            ans = self.A + self.B
            self.LabelResult.configure(text = ans)
        elif self.v.get()==2:
            ans = self.A - self.B
            self.LabelResult.configure(text=ans)
        elif self.v.get()==3:
            ans = self.B - self.A
            self.LabelResult.configure(text=ans)
        elif self.v.get()==4:
            ans = np.dot(self.A, self.B)
            self.LabelResult.configure(text=ans)
        elif self.v.get()==5:
            ans = np.dot(self.B, self.A)
            self.LabelResult.configure(text=ans)
        elif self.v.get()==6:
            ans = round(np.linalg.det(np.matrix(self.A, dtype=float)), 2)
            self.LabelResult.configure(text=ans)
        elif self.v.get()==7:
            ans = round(np.linalg.det(np.matrix(self.B, dtype=float)), 2)
            self.LabelResult.configure(text=ans)
        elif self.v.get()==8:
            detA = round(np.linalg.det(np.matrix(self.A, dtype=float)), 2)
            if detA==0:
                self.LabelResult.configure(text="the determinant is 0, \nmatrix is not invertible")
            else:
                ans = np.matrix.round(np.linalg.inv(np.matrix(self.A, dtype=float)), 2)
                self.LabelResult.configure(text=ans)
        elif self.v.get()==9:
            detB = round(np.linalg.det(np.matrix(self.B, dtype=float)), 2)
            if detB==0:
                self.LabelResult.configure(text="the determinant is 0, \nmatrix is not invertible")
            else:
                ans = np.matrix.round(np.linalg.inv(np.matrix(self.B, dtype=float)), 2)
                self.LabelResult.configure(text=ans)
        elif self.v.get()==10:
            k = float(self.EntryK.get())
            ans = k * np.matrix(self.A)
            self.LabelResult.configure(text=ans)
        else:
            k = float(self.EntryK.get())
            ans = k * np.matrix(self.B)
            self.LabelResult.configure(text=ans)

    def clearALL(self):
        self.A[0, 0] = None
        self.A[0, 1] = None
        self.A[0, 2] = None
        self.A[0, 3] = None
        self.A[1, 0] = None
        self.A[1, 1] = None
        self.A[1, 2] = None
        self.A[1, 3] = None
        self.A[2, 0] = None
        self.A[2, 1] = None
        self.A[2, 2] = None
        self.A[2, 3] = None
        self.A[3, 0] = None
        self.A[3, 1] = None
        self.A[3, 2] = None
        self.A[3, 3] = None
        self.A[2, 2] = None
        self.EntryA1.delete(0, END)
        self.EntryA2.delete(0, END)
        self.EntryA3.delete(0, END)
        self.EntryA4.delete(0, END)
        self.EntryA5.delete(0, END)
        self.EntryA6.delete(0, END)
        self.EntryA7.delete(0, END)
        self.EntryA8.delete(0, END)
        self.EntryA9.delete(0, END)
        self.EntryA10.delete(0, END)
        self.EntryA11.delete(0, END)
        self.EntryA12.delete(0, END)
        self.EntryA13.delete(0, END)
        self.EntryA14.delete(0, END)
        self.EntryA15.delete(0, END)
        self.EntryA16.delete(0, END)

        self.B[0, 0] = None
        self.B[0, 1] = None
        self.B[0, 2] = None
        self.B[0, 3] = None
        self.B[1, 0] = None
        self.B[1, 1] = None
        self.B[1, 2] = None
        self.B[1, 3] = None
        self.B[2, 0] = None
        self.B[2, 1] = None
        self.B[2, 2] = None
        self.B[2, 3] = None
        self.B[3, 0] = None
        self.B[3, 1] = None
        self.B[3, 2] = None
        self.B[3, 3] = None
        self.EntryB1.delete(0, END)
        self.EntryB2.delete(0, END)
        self.EntryB3.delete(0, END)
        self.EntryB4.delete(0, END)
        self.EntryB5.delete(0, END)
        self.EntryB6.delete(0, END)
        self.EntryB7.delete(0, END)
        self.EntryB8.delete(0, END)
        self.EntryB9.delete(0, END)
        self.EntryB10.delete(0, END)
        self.EntryB11.delete(0, END)
        self.EntryB12.delete(0, END)
        self.EntryB13.delete(0, END)
        self.EntryB14.delete(0, END)
        self.EntryB15.delete(0, END)
        self.EntryB16.delete(0, END)

        self.LabelResult.configure(text = "")


    def openBasicCal(self):
        root.destroy()
        Cal.vp_start_gui()

    def openVector(self):
        root.destroy()
        Vec.vp_start_gui()

    def openVector3d(self):
        root.destroy()
        Vec3.vp_start_gui()

    def to_2by2(self):
        root.destroy()
        mat2.vp_start_gui()

    def to_3by3(self):
        root.destroy()
        mat3.vp_start_gui()

    def openAbout(self):
        ab.vp_start_gui()

    def btoMain(self):
        root.destroy()
        mm.vp_start_gui()

    def to_st(self):
        root.destroy()
        st.vp_start_gui()

    def to_ct(self):
        root.destroy()
        ct.vp_start_gui()

    def to_r3d(self):
        root.destroy()
        r3d.vp_start_gui()

    def when_closing(self):
        if messagebox.askyesno('My Vector and Matrix Calculator', 'Do you really want to quit?'):
            sys.exit()
        else:
            pass








if __name__ == '__main__':
    vp_start_gui()

